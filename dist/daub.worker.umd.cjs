!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e){return null==e?"":String(e)}function t(e){let t=e.toString();return t=t.replace(/^\//,""),t=t.replace(/\/[mgiy]*$/,""),t}function n(n,r,s){let p="";if("function"!=typeof s){let e=new a(s);s=t=>e.evaluate(t)}if(r.flags&&r.flags.indexOf("g")>-1?r=function(e){let n=e.flags.replace("g","");return new RegExp(t(e),n)}(r):"string"==typeof r&&(r=String(r).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")),!r)return(s=s(""))+n.split("").join(s)+s;for(;n.length>0;){let t=n.length,a=n.match(r);if(a){let r,i=s(a,n);if(Array.isArray(i)&&([i,r]=i),p+=n.slice(0,a.index),p+=e(i),(n=void 0!==r?n.slice(a.index+r):n.slice(a.index+a[0].length)).length===t)throw new Error("Infinite loop detected; none of the string was consumed.")}else p+=n,n=""}return p}class a{constructor(e){this.template=String(e),this.pattern=a.DEFAULT_PATTERN}evaluate(t){return n(this.template,this.pattern,(n=>{if(null==t)return"";let a=n[1]||"";if("\\"==a)return n[2];let r=t,s=n[3],p=/^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;if(null==(n=p.exec(s)))return a;for(;null!=n;){if(r=r["["===n[1].charAt(0)?n[2].replace(/\\]/,"]"):n[1]],null==r||""===n[3])break;s=s.substring("["===n[3]?n[1].length:n[0].length),n=p.exec(s)}return a+e(r)}))}}function r(){return"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope}function s(){return"undefined"!=typeof CustomEvent}function p(e){return"string"==typeof e}function i(e){return Array.isArray(e)?e:[e]}function o(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};r=Object.assign({startIndex:0,startDepth:0,considerEscapes:!0},r);let{startIndex:s,startDepth:p,considerEscapes:i}=r,o=t.length,l=n.length,c=e.length;for(let r=s;r<c;r++){r>0&&(a=e.slice(r-1,r));let s=!!i&&"\\"===a,c=e.slice(r,r+o);if(e.slice(r,r+l)!==n||s||p++,c===t&&!s&&(p--,0===p))return r}return-1}function l(e){return e=(e=e.replace(/^[\s\t]*/gm,"")).replace(/\n/g,"")}function c(e,t){return e?`<span class="${t}">${e}</span>`:""}function u(e,t,n){let a,p;a=performance.now(),performance.mark&&performance.mark("daub-lexer-before");let i=t.run(e,n);if(p=performance.now(),performance.mark&&(performance.mark("daub-lexer-after"),performance.measure("daub-lexer-before","daub-lexer-after")),!r()&&s()){let e=new CustomEvent("daub-lexer-time",{bubbles:!0,detail:p-a});document.dispatchEvent(e)}return i.lengthConsumed-1}function d(e,t,n){let a,i;a=performance.now(),performance.mark&&performance.mark("daub-lexer-before");let o=t.run(e,n,{highlight:!0});if(i=performance.now(),performance.mark&&(performance.mark("daub-lexer-after"),performance.measure("daub-lexer-before","daub-lexer-after")),!r()&&s()){let e=new CustomEvent("daub-lexer-time",{bubbles:!0,detail:i-a});document.dispatchEvent(e)}let l=g(o).map((e=>{let t;if(p(e))return e;if(e.open)t=p(e.open)?`<span class="${e.open}">`:"";else if(e.close)t=p(e.close)?"</span>":"";else{let n=e.scopes||e.name;t=n?`<span class="${n}">${e.content}</span>`:e.content}return t})).join("");return{index:o.lengthConsumed-1,highlighted:l}}function m(e){let t=[];e=i(e);for(let n of e)if(p(n))t.push(n);else if(n.content){let e=m(i(n.content));t.push(...e)}return t.join("")}function g(e){let t=[];if(p(e))return[e];if(e.content)if(p(e.content))t.push({name:e.name,scopes:e.scopes,content:e.content});else{e.scopes&&t.push({open:e.scopes});for(let n of i(e.content))t.push(...g(n));e.scopes&&t.push({close:e.scopes})}return t}a.DEFAULT_PATTERN=/(^|.|\r|\n)(#\{(.*?)\})/,a.interpolate=function(e,t){return new a(e).evaluate(t)};class b{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.highlighter&&(this.highlighter=e.highlighter),this.storage=new Map}set(e,t){this.storage.set(e,t)}get(e,t){return this.storage.has(e)?this.storage.get(e):(this.storage.set(e,t),t)}}let f={DEBUG:0,INFO:1,LOG:2,WARN:3,ERROR:4};class w{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,{enabled:t=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var n;this.enabled="function"==typeof(n=t)?n():n,this.tag=e}toggle(e){this.enabled="function"==typeof e?e():e}_tag(){return`[${this.tag}]`}debug(){if(this.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.debug(this._tag(),...t)}}info(){if(this.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.info(this._tag(),...t)}}log(){if(this.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.log(this._tag(),...t)}}warn(){if(this.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.warn(this._tag(),...t)}}group(){if(this.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.group(this._tag(),...t)}}groupCollapsed(){if(this.enabled){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];console.groupCollapsed(this._tag(),...t)}}groupEnd(){this.enabled&&console.groupEnd()}}for(let e in f)w[e]=f[e];function h(e){return"function"==typeof e?e():e}class y extends Error{constructor(e){super(e),this.name="ParseError"}}class x{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};"object"!=typeof e||t?(this.name=e,this.names=[e,...n.alias||[]],this._classNamePattern=new RegExp("\\b(?:"+this.names.join("|")+")\\b")):(this.name=null,n=t||n,t=e),this.options=n,this.rules=[],this.logger=new w(`Grammar ${this.name}`),this._originalRules=t,this.extend(t),this.name&&this.names.forEach((e=>{x.register(e,this)}))}_toObject(){return{...this._originalRules}}parse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,{logging:a=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=this.pattern;return r.lastIndex=0,a=t.logging||a,this.logger.toggle(h(a)),t||(t=new b({highlighter:{parse:e=>e}})),t.logging=a,this.logger.debug(`Parsing ${this.name||""}`,{pattern:r,text:e}),r.test(e)?n(e,r,((e,n)=>{let a,s,p,i=0,o=1;for(;a=this.rules[i++];){if(!e[o]){o+=a.length;continue}if(this.logger.debug("MATCH rule:",a,e[o]),a.index){let i=[];for(let t=0;t<a.length;t++)i.push(e[t+o]);if(p=a.index(e[0],t,i),p<=0&&(p=void 0),void 0!==p&&(s=p+1,n=n.slice(0,e.index+s),!(e=r.exec(n))||!e[o])){let t=new y('Bad "index" callback; requested substring did not match original rule.');throw Object.assign(t,{rule:a,source:n,match:e,index:p}),t}}let i=[];for(let t=0;t<=a.length;t++)i.push(e[o+t]);if(i.name=a.name,a.captures)for(let e=0;e<i.length;e++){if(!(e in a.captures))continue;let n=h(a.captures[e]);"string"==typeof n?i[e]=c(i[e],n):n instanceof x&&i[e]&&(i[e]=n.parse(i[e],t))}if(a.before){let e=a.before(i,t);void 0!==e&&(i=e)}let l=a.replacement;i.name||(i.name=a.name),i.index=e.index;let u=l.evaluate(i);if(a.after){let e=a.after(u,t);void 0!==e&&(u=e)}return void 0!==p?[u,s]:u}return""})):e}_makeRules(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=[];for(let[a,r]of Object.entries(e)){let e=r.name||a,s=new v(e,r,t);n.push(s),t+=s.length}return n}match(e){return this._classNamePattern.test(e)}extend(){let e;for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];if(1!==n.length)return n.forEach((e=>this.extend(e))),this;if(e=n[0],e instanceof x&&(e=e.toObject()),!e)throw new Error("Nonexistent grammar!");let r=0;this.rules.length&&(r=this.rules.map((e=>e.length)).reduce(((e,t)=>e+t)));let s=e,p=this._makeRules(s,r);return this.rules.push(...p),this.pattern=new RegExp(this.rules.map((e=>e.pattern)).join("|"),this.options.ignoreCase?"mi":"m"),this}toObject(){let e={};return this.rules.forEach((t=>{e[t.name]=t.toObject()})),e}}const k={};x.register=(e,t)=>{k[e]=t},x.find=e=>k[e]||null;class v{constructor(e,n,r){this.name=e;let s=n.replacement;s?this.replacement=s instanceof a?s:new a(s):n.captures?this.replacement=null:this.replacement=v.DEFAULT_TEMPLATE,this.debug=n.debug,this.before=n.before,this.after=n.after,this.index=n.index,this.captures=n.captures;let p=n.pattern,i=n.pattern;if(null==i)throw new Error(`Rule must have pattern: ${e}`);"string"!=typeof i&&(i=t(i)),i=i.replace(/\\(\d+)/g,((e,t)=>{let n=Number(t);return`\\${r+n+1}`}));let o=(i.match(/\(/g)||"").length,l=(i.match(/\(\?[:!=]/g)||"").length+(i.match(/\\\(/g)||"").length-(i.match(/\\\(\?[:!=]/g)||"").length;this.length=o+1-l,this.pattern=`(${i})`,this.originalPattern=p,this.replacement||(this.replacement=v.makeReplacement(this.length,n.wrapReplacement))}toObject(){return{pattern:this.originalPattern,replacement:this.replacement,before:this.before,after:this.after,index:this.index,captures:this.captures}}}v.DEFAULT_TEMPLATE=new a('<span class="#{name}">#{0}</span>'),v.makeReplacement=(e,t)=>{let n=[];for(let t=1;t<e;t++)n.push(t);let r=n.join("}#{");return r=`#{${r}}`,new a(t?`<span class="#{name}">${r}</span>`:r)};let $=new x({"meta: parameter":{pattern:/(?:\b|^)((?:(?:[A-Za-z_$][\w\d]*)\s)*)(\s*)([a-zA-Z_$:][\w\d]*)(?=,|$)/,captures:{1:()=>R,3:"variable variable-parameter"}}}),A=new x({escape:{pattern:/\\./}});const _=new x({"meta: function":{pattern:/([A-Za-z_$]\w*)(\s+)([a-zA-Z_$:]\w*)(\s*)(\()(.*)(\))(\s*)(?={)/,index(e){let t=o(e,")","(",{startIndex:e.indexOf("(")});return e.indexOf("{",t)-1},captures:{1:"storage storage-type storage-return-type",3:"entity",6:()=>$}},"meta: bare declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(?=;)/,captures:{1:"storage storage-type",3:"variable"}},"meta: declaration with assignment":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(=)/,captures:{1:"storage storage-type",3:"variable",5:"operator"}},"meta: array declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\[)(\d+)(\])/,captures:{1:"storage storage-type",3:"variable",4:"punctuation",5:"number",6:"punctuation"}},"meta: declaration with parens":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(\()([\s\S]*)(\))(;)/,index(e){let t=o(e,")","(")+1;return e.indexOf(";",t)},captures:{1:"storage storage-type",3:"variable",5:"punctuation",6:()=>z,7:"punctuation"}},"meta: class declaration":{pattern:/\b(class|enum)(\s+)([A-Za-z][A-Za-z0-9:_$]*)(\s*)({)/,captures:{1:"storage storage-type",3:"entity entity-class"}}}),z=new x({constant:{pattern:/\b[A-Z_]+\b/},lambda:{pattern:/(\[\])(\s*)(\()([\s\S]*)(\))(\s*)({)([\s\S]*)(})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{1:"punctuation",3:"punctuation",4:()=>$,5:"punctuation",7:"punctuation",8:()=>q,9:"punctuation"}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\')*)(')/,wrapReplacement:!0,captures:{2:()=>A}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\[rnt]|\\\\|\\")*)(")/,wrapReplacement:!0,captures:{2:()=>A}},number:{pattern:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i}}),Z=new x({comment:{pattern:/(\/\/[^\n]*(?=\n|$))|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/}}),R=new x({"storage storage-type":{pattern:/\b(?:u?int(?:8|16|36|64)_t|int|long|float|double|char(?:16|32)_t|char|class|bool|wchar_t|volatile|virtual|extern|mutable|const|unsigned|signed|static|struct|template|private|protected|public|mutable|volatile|namespace|struct|void|short|enum)/}}),j=new x({}).extend(Z,z),S=new x({"macro macro-define":{pattern:/^(\#define)(\s+)(\w+)(.*?)$/,replacement:l('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="entity entity-macro">#{3}</span>\n      #{4}\n    '),captures:{1:"keyword keyword-macro",3:"entity entity-macro",4:()=>j}},"macro macro-include":{pattern:/^(\#include)(\s+)("|<|&lt;)(.*?)("|>|&gt;)(?=\n|$)/,replacement:l('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="string string-include">\n        <span class="punctuation">#{3}</span>\n        #{4}\n        <span class="punctuation">#{5}</span>\n      </span>\n    ')},"macro macro-with-one-argument":{pattern:/(\#(?:ifdef|ifndef|undef|if))(\s+)(\w+)/,captures:{1:"keyword keyword-macro",3:"entity entity-macro"}},"macro macro-error":{pattern:/(#error)(\s*)(")(.*)(")/,replacement:l('\n      <span class="keyword keyword-macro">#{1}</span>\n      #{2}\n      <span class="string string-quoted">#{3}#{4}#{5}</span>\n    ')},"keyword keyword-macro":{pattern:/#(endif|else)/}}),q=new x("arduino",{"keyword keyword-control":{pattern:/\b(?:alignas|alignof|asm|auto|break|case|catch|compl|constexpr|const_cast|continue|decltype|default|delete|do|dynamic_cast|else|explicit|export|for|friend|goto|if|inline|new|noexcept|nullptr|operator|register|reinterpret_cast|return|sizeof|static_assert|static_cast|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|using|while)\b/},support:{pattern:/\b(?:printf|sprintf|strpos|strstr|strcat)/}}).extend(Z,_);function E(e){return"function"==typeof e?e():e}function I(e,t){let n=e.final;if("boolean"==typeof n)return n;if("function"==typeof n)return n(t);if(n)throw new TypeError("Invalid value for rule.final!");return!1}q.extend(S,z,R,{operator:{pattern:/--?|\+\+?|!=?|(?:<|&lt;){1,2}=?|(&gt;|>){1,2}=?|-(?:>|&gt;)|:{1,2}|={1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/}});class O extends Error{constructor(e){super(e),this.name="LexerError"}}class T{constructor(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.name=e,this.content=t,this.index=a+n,this.scopes=r.scopes}}class C{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.rules=e,this.name=t,this.scopes=n.scopes,this.silent=!!n.silent,this.highlight=n.highlight,this.logger=new w(`Lexer ${this.name}`)}addRules(e){this.rules.push(...e)}[Symbol.iterator](){let e=[];for(let t of this.rules)if(t.include){let n=E(t.include);e.push([...n])}else e.push(t);return e.values()}run(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,{startIndex:n=0,highlight:a=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=this.logger.enabled;t&&this.logger.toggle(t.logging);let s=[];t||(t=new b);let p=null,i=n;for(;e;){let n,r,o;for(let a of this){if(a.pattern.lastIndex=0,o=a.pattern.exec(e),o&&a.test){let n=!1;if(a.pattern.lastIndex>o.index)for(;o&&(n=a.test(o,e,t,a.pattern),!n);)o=a.pattern.exec(e);else n=a.test(o,e,t,a.pattern),n||(o=null)}if(o){if(0===o.index){r=o,n=a;break}(!r||o.index<r.index)&&(r=o,n=a)}}if(!r){this.logger.debug(this.name,"No match!");break}this.logger.debug(this.name,"Match:",n.name,r[0],r,n),this.logger.debug(" found at global index:",r.index+i),n.win&&n.win(r,e,t);let l=r.index,c=r.index+r[0].length;if(r.index>0){let t=e.slice(0,r.index);s.push(t),i+=t.length,l=0}e=e.slice(c);let u=I(n,t),d=u&&n.skipSubRulesIfFinal;if(n.trim){if(n.raw)throw new O('Options "trim" and "raw" cannot coexist on a rule!');let e=r[0],t=/^[\n\s\t]+/.exec(e);t&&(s.push(t[0]),r[0]=r[0].slice(t[0].length),i+=t[0].length)}if(n.raw)s.push(r[0]),i+=r[0].length;else if(!n.inside&&!n.after||d){let e=new T(n.name,r[0],l,i,{scopes:n.scopes||n.name});s.push(e),i+=r[0].length}else{let p,o,c;if(n.inside?(c="inside",p=n.inside.name,o=E(n.inside.lexer)):(c="after",p=n.after.name,o=E(n.after.lexer)),!(o&&o instanceof C))throw new O("Invalid lexer!");let u=new T(n.name,r[0],l,i,{scopes:n.scopes||n.name}),d=i+r[0].length-l,m=[];"inside"===c?m.push(u):s.push(u),this.logger.debug("Lexer START",p,"at index:",d,e);let g=o.run(e,t,{startIndex:d,highlight:a});this.logger.debug("Lexer END",p,"consumed:",g.lengthConsumed),m.push(...g.tokens);let b=new T(p,m,l,i,{scopes:g.scopes});s.push(b),i=g.lengthConsumed,e=g.text}if(u){this.logger.debug(this.name,"Last rule! Done.");break}if(e===p){this.logger.debug(this.name,"No further matches! Done.");break}p=e}return a&&this.highlight&&(s=this.highlight(s,t)),this.logger.toggle(r),{name:this.name,scopes:this.scopes,content:s,tokens:s,text:e,lengthConsumed:i}}}const P=new C([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string",{scopes:"string"}),L=new C([{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:P}}],"attribute-value"),D=new C([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:L}}],"attribute-separator"),F=new C([{name:"tag tag-html tag-html-custom",pattern:/^[a-zA-Z][a-zA-Z-:]*(?=\s|>|&gt;)/},{name:"tag tag-html",pattern:/^[a-zA-Z][a-zA-Z:]*(?=\s|>|&gt;)/},{name:"attribute-name",pattern:/^\s*(?:\/)?[a-zA-Z][a-zA-Z-:]*(?=\=)/,after:{name:"attribute-separator",lexer:D}},{name:"punctuation",pattern:/\/(?:>|&gt;)/,final:!0},{name:"punctuation",pattern:/(>|&gt;)/,final:!0}],"tag"),N=new C([{name:"punctuation",pattern:/^(?:<|&lt;)/,after:{name:"tag",lexer:F}}],"tag-start",{scopes:"element element-opening"}),M=new x({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z][a-zA-Z-:]*)(=)/,captures:{1:"attribute-name",2:"punctuation"}}}),G=new x({"constant constant-html-entity constant-html-entity-named":{pattern:/(&amp;)[a-z]+;/},"constant constant-html-entity constant-html-entity-numeric":{pattern:/(&amp;)\#([0-9]+|[xX][0-9a-fA-F]+);/}});new x("html",{"embedded embedded-javascript":{pattern:/(&lt;|<)(script|SCRIPT)(\s+.*?)?(&gt;|>)([\s\S]*?)((?:&lt;|<)\/)(script|SCRIPT)(&gt;|>)/,replacement:l("\n      <span class='element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n        #{5}\n      <span class='element element-closing'>\n        <span class='punctuation'>#{6}</span>\n        <span class='tag'>#{7}</span>\n        <span class='punctuation'>#{8}</span>\n      </span>\n    "),captures:{3:M},before:(e,t)=>{t.highlighter&&(e[5]=t.highlighter.parse(e[5],"javascript",t))}},"element element-opening":{pattern:/(<|&lt;)([a-zA-Z][a-zA-Z-:]*)(?:(\s+)([\s\S]*))?(.)(&gt;|>)/,replacement:l("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag tag-html'>#{2}</span>\n        #{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index(e,t){let{index:n,highlighted:a}=d(e,N,t);return t.set("lexer-highlighted",a),n},after(e,t){let n=t.get("lexer-highlighted");return t.set("lexer-highlighted",!1),n||e}},"element element-closing element-closing-custom":{pattern:/((?:<|&lt;)\/)([a-zA-Z:\-]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html tag-html-custom",3:"punctuation"},wrapReplacement:!0},"element element-closing":{pattern:/((?:<|&lt;)\/)([a-zA-Z:]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html",3:"punctuation"},wrapReplacement:!0},"element element-doctype":{pattern:/((?:<|&lt;)!)(DOCTYPE)(\s+)(html)([\s\S]*?)(>|&gt;)/,captures:{1:"punctuation",2:"keyword special",4:"keyword special",5:M,6:"punctuation"},wrapReplacement:!0},comment:{pattern:/(?:<|&lt;)!\s*(--([^-]|[\r\n]|-[^-])*--\s*)(?:>|&gt;)/}},{encode:!0}).extend(G);const B=new C([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string",{scopes:"string"}),U=new C([{name:"exclude escaped punctuation",pattern:/\\\{/,raw:!0},{name:"punctuation",pattern:/\{/,inside:{name:"inside-brace",lexer:()=>U}},{name:"punctuation",pattern:/\}/,final:!0}],"balance-braces"),X=new C([{name:"exclude escaped punctuation",pattern:/\\\{/,raw:!0},{name:"punctuation",pattern:/\{/,inside:{name:"inside-brace",lexer:U}},{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"punctuation interpolation-end",pattern:/\}/,final:!0}],"template-string-interpolation"),Q=new C([{name:"interpolation-start",pattern:/(\$\{)/,inside:{name:"interpolation",lexer:X},final:!0}],"template-string-interpolation-start"),W=new C([{name:"interpolation-start",pattern:/(\$\{)/,inside:{name:"interpolation",lexer:X}},{name:"exclude escaped backtick",pattern:/\\\x60/,raw:!0},{name:"string-end",pattern:/\x60/,final:!0}],"template-string"),H=new C([{name:"string-start",pattern:/\x60/,final:!0,after:{name:"string string-template",lexer:W}}],"template-string-start"),Y=new C([{name:"punctuation interpolation-begin",pattern:/\{/,inside:{lexer:U}},{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"string-begin",pattern:/^\s*('|")/,win(e,t,n){n.set("string-begin",e[1])},inside:{name:"string",lexer:B}},{name:"template-string-begin",pattern:/\x60/,inside:{name:"template-string",lexer:W}},{name:"punctuation interpolation-end",pattern:/\}/,final:!0}],"jsx-interpolation",{highlight:(e,t)=>{let n=e.pop(),a=m(e);return[je.parse(a,t),n]},scopes:"embedded jsx-interpolation"}),J=new C([{name:"punctuation interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:Y}}],"before-jsx-interpolation"),K=new C([{name:"punctuation interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:Y},final:!0},{name:"string-begin",pattern:/^\s*('|")/,win(e,t,n){n.set("string-begin",e[1])},inside:{name:"string",lexer:B}}],"attribute-value"),V=new C([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:K}}],"attribute-separator"),ee=new C([{name:"tag HTML",scopes:"tag tag-html",pattern:/^[a-z]+(?=&gt;|>)/},{name:"tag JSX",scopes:"tag tag-jsx",pattern:/^[A-Z][A-Za-z0-9_$\.]*(?=&gt;|>)/},{name:"punctuation",pattern:/^\s*(?:>|&gt;)/,win(e,t,n){let a=n.get("jsx-tag-depth");if(a<1)throw new Error("Depth error!");a--,n.set("jsx-tag-depth",a)},trim:!0,final:!0}],"jsx-closing-tag",{scopes:"jsx-element element element-closing"}),te=new C([{name:"punctuation interpolation-begin",pattern:/^\s*\{/,inside:{name:"interpolation",lexer:Y},trim:!0},{name:"attribute-name",pattern:/^\s*[a-zA-Z][a-zA-Z0-9_$-]+(?=\=)/,after:{name:"attribute-separator",lexer:V},trim:!0},{name:"attribute-name",pattern:/^\s*[a-zA-Z][a-zA-Z0-9_$-]+(?=\s)/,trim:!0},{name:"punctuation punctuation-self-closing",pattern:/^\s*\/(?:>|&gt;)/,win(e,t,n){n.set("is-opening-tag",null)},trim:!0,final:e=>e.get("is-root")},{name:"punctuation",pattern:/^\s*(>|&gt;)/,test(e,t,n){let a=n.get("jsx-tag-depth");return a+=n.get("is-opening-tag")?1:-1,0!==a},win(e,t,n){let a=n.get("jsx-tag-depth");return a+=n.get("is-opening-tag")?1:-1,n.set("jsx-tag-depth",a),n.set("is-opening-tag",null),e},trim:!0,final:e=>{let t=e.get("jsx-tag-depth");return e.get("only-opening-tag")||0===t},skipSubRulesIfFinal:!0,after:{name:"jsx-contents",lexer:()=>ne}}],"inside-tag"),ne=new C([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,trim:!0,after:{name:"tag",lexer:()=>ae}},{name:"punctuation",pattern:/(?:<|&lt;)\/(?=[A-Za-z])/,inside:{name:"element jsx-element",lexer:ee},final:!0},{name:"punctuation interpolation-begin",pattern:/\{/,inside:{name:"interpolation",lexer:Y}}],"within-tag"),ae=new C([{name:"tag tag-html",pattern:/^[a-z\-]+(?=\s|(?:>|&gt;))/,test:(e,t,n)=>(n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e),trim:!0,after:{name:"jsx-tag-contents",lexer:te},final:e=>e.get("only-opening-tag")},{name:"tag tag-jsx",pattern:/^[A-Z][\w\d$\.]*(?=\s|(?:>|&gt;))/,test:(e,t,n)=>(n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e),after:{name:"jsx-tag-contents",lexer:te}}],"tag-name"),re=new C([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("only-opening-tag",!0),e),trim:!0,after:{name:"tag",lexer:ae,silent:!0},final:!0}],"tag-open-start"),se=new C([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("is-root",!0),e),trim:!0,after:{name:"tag",lexer:ae,silent:!0}}],"tag-root",{scopes:"jsx-element element element-opening"});let pe=new x({escape:{pattern:/\\./}}),ie=new x({escape:{pattern:/\\./},"exclude from group begin":{pattern:/(\\\()/,replacement:"#{1}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),oe=new x({interpolation:{pattern:/(\$\{)(.*)(\})/,index:(e,t)=>u(e,Q,t),captures:{1:"punctuation interpolation-start",2:()=>je,3:"punctuation interpolation-end"},wrapReplacement:!0}}).extend(pe);const le=new x({"meta: parameter with default":{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*=\s*)(.*?)(?=,|\)|\n|$)/,captures:{1:"variable parameter",2:"keyword operator",3:()=>ye}},"keyword operator":{pattern:/\.{3}/},operator:{pattern:/=/},"variable variable-parameter":{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/}});let ce=new x({"string string-template":{pattern:/(`)([\s\S]*)(`)/,index:(e,t)=>u(e,H,t),captures:{1:"punctuation string-start",2:oe,3:"punctuation string-end"},wrapReplacement:!0},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\.)*)(')/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",captures:{2:pe}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\.)*)(")/,captures:{2:pe},wrapReplacement:!0}}),ue=new x({"embedded jsx-interpolation":{pattern:/(\{)([\s\S]*)(\})/,index:e=>u(e,J),captures:{1:"punctuation embedded-start",2:()=>je,3:"punctuation embedded-end"},wrapReplacement:!0}}),de=new x({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z-:]+)(=)/,captures:{1:"attribute-name",2:"punctuation"},wrapReplacement:!0}}).extend(ue),me=new x({});me.extend(de),me.extend(ue),me.extend({"punctuation punctuation-tag-close":{pattern:/>|\/>/}});let ge=new x({jsx:{pattern:/(<|&lt;)([a-zA-Z_$][a-zA-Z0-9_$\.]*\s*)([\s\S]*)(&gt;|>)/,index:(e,t)=>{let{index:n,highlighted:a}=d(e,se,t);return t.set("lexer-highlighted",a),n},replacement:"<span class='jsx'>#{0}</span>",after:(e,t)=>t&&t.get("lexer-highlighted")||e}});function be(e){return e.match(/^[A-Z]/)?c(e,"tag tag-jsx"):c(e,"tag tag-html")}let fe=new x({"meta: opening tag without attributes":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(&gt;|>)/,replacement:l("\n      <span class='jsx-element element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        #{2}\n        <span class='punctuation'>#{3}</span>\n      </span>\n    "),before(e,t){e[2]=be(e[2])}},"tag tag-open":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(\s+)([\s\S]*)(.)(&gt;|>)/,replacement:l("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        #{2}#{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index:e=>u(e,re),before(e,t){e.name="jsx-element element element-opening",e[2]=be(e[2]),e[5]&&("/"===e[5]?(e.name=e.name.replace("element-opening","element-self"),e[5]=c(e[5],"punctuation")):(e[4]+=e[5],e[5]="")),e[4]=de.parse(e[4],t)}},"tag tag-close":{pattern:/((?:<|&lt;)\/)([\w$][\w\d_$\.]*)(\s*)(&gt;|>)/,before(e,t){e[2]=be(e[2])},replacement:l("\n      <span class='jsx-element element element-closing'>\n        <span class='punctuation'>#{1}</span>\n        #{2}#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n    ")}});new x({}).extend(ue,fe);let we=new x({params:{pattern:/(\()([^)]+)(\))/,wrapReplacement:!0,captures:{1:"punctuation",2:le,3:"punctuation"}},"variable variable-parameter":{pattern:/[\w$][\w\d_$]*/}}),he=new x({"meta: single-parameter multiline arrow function":{pattern:/([\w$][\w\d$]*)(\s*)(=(?:>|&gt;))/,captures:{1:we,3:"operator"}},"meta: arrow function with params in parentheses":{pattern:/(\([^)\(]+\))(\s*)(=(?:>|&gt;))/,captures:{1:we,3:"operator"}},"single line arrow function":{pattern:/(\(?[^)\(]\)?|[a-zA-Z_$][a-zA-Z0-9_$]*)(\s*)(=(?:>|&gt;))(\s*)/,captures:{1:we,3:"operator"}}}),ye=new x({});ye.extend({constant:{pattern:/\b(?:arguments|this|false|true|super|null|undefined)\b/},"number number-binary-or-octal":{pattern:/0[bo]\d+/},number:{pattern:/(?:\d*\.?\d+)/}}),ye.extend(ce),ye.extend(he),ye.extend({comment:{pattern:/(\/\/[^\n]*(?=\n|$))|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/},regexp:{pattern:/(\/)(.*?[^\\])(\/)([mgiy]*)/,captures:{2:ie,4:"keyword regexp-flags"},wrapReplacement:!0}});let xe=new x({alias:{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*)(:)(\s*)(?=\w|\{|\[)/,captures:{1:"entity"}},variable:{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/},operator:{pattern:/=/}}),ke=new x("import specifiers",{ordinary:{pattern:/(^|,)([\s\n]*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import"}},"default as":{pattern:/(^|,)([\s\n]*)(default)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"keyword keyword-default",5:"keyword keyword-as",7:"variable variable-import"}},"foo as bar":{pattern:/(^|,)([\s\n]*)([\w$][\w\d$]*)(\s+)(as)(\s+)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import",5:"keyword keyword-as",7:"variable variable-import"}}}),ve=new x("import specifier",{"implicit default specifier":{pattern:/^(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=,|$)/,captures:{2:"variable variable-import"}},specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:ke}}}),$e=new x({"import with destructuring":{pattern:/(^\s*)(import)(\s*)(?=\{)([\s\S]*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:ve,6:"keyword keyword-from",8:ce}},"import with source":{pattern:/(^\s*)(import)(\s*)(.*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>ve,6:"keyword keyword-from",8:()=>ce}},"import without source":{pattern:/(^\s*)(import)(\s*)(?=\`|'|")(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>ce}}}),Ae=new x("export specifiers",{ordinary:{pattern:/(^|,)(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-export"}},"as default":{pattern:/(^|,)(\s*)([\w$][\w\d$]*)(\s*)(as)(\s*)(default)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-export",5:"keyword keyword-as",7:"keyword keyword-default"}},"as [identifier]":{pattern:/(^|,)(\s*)([\w$][\w\d$]*)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import",5:"keyword keyword-as",7:"variable variable-export"}}}),_e=new x("export specifier",{specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:Ae}}}),ze=new x("exports",{"export with destructuring":{pattern:/(^\s*)(export)(\s*)(?=\{)([\s\S]*?\s*\})/,captures:{2:"keyword keyword-export",4:_e}},"export default with identifier":{pattern:/(^\s*)(export)(\s+)(default)(\s+)([\w$][\w\d$]*)/,captures:{2:"keyword keyword-export",4:"keyword keyword-default",6:"variable variable-export"}},"export by itself or with default":{pattern:/(^\s*)(export)(\s+)(default)?(\s*)(?=let|const|var|function|\[|\{)/,captures:{2:"keyword keyword-export",4:"keyword keyword-default"}}}),Ze=new x({"keyword operator":{pattern:/\|\||&&|&amp;&amp;|!==?|={1,3}|(?:>=|&gt;=)|(?:<=|&lt;=)|\+\+|\+|--|-|\*|[\*\+-\/]=|\.{3}|\b(?:instanceof|in|of)\b|!|void|\.|(?:>|&gt;)|(?:<|&lt;)/},"meta: ternary colon":{pattern:/(\s+)(\?|:)(\s+)/,captures:{2:"keyword operator operator-ternary"}}}),Re=new x({});Re.extend(fe),Re.extend(ye),Re.extend(he),Re.extend(Ze);let je=new x("javascript-jsx",{},{alias:["react","javascript","js"]});je.extend(ge),je.extend($e),je.extend(ze),je.extend(ye),je.extend({"meta: exclude digits in the middle of identifiers":{pattern:/\$\d/,replacement:"#{0}"},"meta: properties with keyword names":{pattern:/(\.)(for|if|while|switch|catch|return)\b/,replacement:"#{0}"},"meta: functions with keyword names":{pattern:/(\s*)\b(for|if|while|switch|catch)\b/,replacement:"#{1}<span class='keyword'>#{2}</span>"},"meta: new keyword plus identifier":{pattern:/(new)(\s+)((?:[\w$][\w\d$]*\.)*)([\w$][\w\d$]*)(?=\()/,captures:{1:"keyword keyword-new",3:()=>Ze,4:"entity-class"}},"meta: variable declaration":{pattern:/\b(var|let|const)(\s+)([\w$][\w\d$]*?)(\s*)(?=\s|=|;|,)/,captures:{1:"storage",3:"variable"}},"meta: variable assignment":{pattern:/(\s+|,)([A-Za-z_$][\w\d$]*?)(\s*)(?==)(?!=(?:>|&gt;))/,captures:{2:"variable"}},"meta: destructuring assignment":{pattern:/(let|var|const)(\s+)(\{|\[)([\s\S]*)(\}|\])(\s*)(=)/,index:e=>{let t=/(let|var|const|)(\s+)(\{|\[)/.exec(e)[3],n=o(e,{"{":"}","[":"]"}[t],t),a=e.indexOf("=",n);return e.slice(0,a+1),a},captures:{1:"storage",4:xe,7:"operator"}},"function function-expression":{pattern:/\b(function)(\s*)([a-zA-Z_$]\w*)?(\s*)(\()(.*?)(\))/,captures:{1:"keyword keyword-function",3:"entity",5:"punctuation",6:le,7:"punctuation"}},"function function-literal-shorthand-style":{pattern:/(^\s+)(get|set|static)?(\s*)([\w$][\w\d$]*)(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{2:"storage",4:"entity",6:"punctuation",7:le,8:"punctuation"}},"meta: function shorthand with computed property name":{pattern:/(])(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{3:"punctuation",4:le,5:"punctuation",7:"punctuation"}},"function function-assigned-to-variable":{pattern:/\b([\w$][\w\d$]*)(\s*)(=)(\s*)(function)(\s*)(\()(.*?)(\))/,captures:{1:"variable",3:"operator",5:"keyword",7:"punctuation",8:le,9:"punctuation"}},"meta: property then function":{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(:)(\s*)(?=function)/,captures:{1:"entity",2:"punctuation"}},entity:{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(?=:)/},"meta: class definition":{pattern:/(class)(?:(\s+)([A-Z][A-Za-z0-9_]*))?(?:(\s+)(extends)(\s+)([A-Z][A-Za-z0-9_$\.]*))?(\s*)({)/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")+1}),captures:{1:"storage",3:"entity entity-class",5:"storage",7:"entity entity-class entity-superclass"}},storage:{pattern:/\b(?:var|let|const|class|extends|async|static)\b/},keyword:{pattern:/\b(?:try|catch|finally|if|else|do|while|for|break|continue|case|switch|default|return|yield|throw|await)\b/}}).extend(Ze);const Se=new x({variable:{pattern:/(\$[\d\w_\-]+)\b/}}),qe=new x({"meta: unquoted IP address string":{pattern:/(\s|^)(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:\:\d+)?)/,captures:{2:"string string-unquoted string-ip-address"}},"string string-unquoted string-url":{pattern:/\bhttps?:\/\/.*?(?=;|\s|$)/},"meta: unquoted path string":{pattern:/(\s+|^)((?:[A-Za-z0-9_\-]+)?\/(?:\\\s|.)+?(?=\s|$))/,captures:{2:"string string-unquoted string-path"}},"meta: number":{pattern:/(\s|^)(\d[\d\.]*)/,captures:{2:"number number-integer"}},"meta: string":{pattern:/((?:^|[^\\])(?:\\\\)*)("(?:[^"\\]|\\.|\n)*"|'(?:[^'\\]|\\.|\n)*')/,before(e){e[2]=function(e){let t=e.charAt(0),n=Se.parse(e.slice(1,-1));return l(`\n    <span class="string string-quoted">\n      <span class="punctuation">${t}</span>\n      ${n}\n      <span class="punctuation">${t}</span>\n    </span>\n  `)}(e[2])},replacement:"#{1}#{2}"},variable:{pattern:/\$[A-Za-z_][A-Za-z0-9_]*/},"meta: boolean":{pattern:/(\s)(off|on)(?!\S)/,captures:{2:"constant constant-boolean"}}});const Ee=new x({}).extend(qe).extend({"entity entity-function-with-block":{pattern:/^(?:server|location|events|http|upstream|types)(?!\S)/},"support support-function":{pattern:/^\S+/}});new x("nginx",{"comment comment-line":{pattern:/(^|[\s{};])#.*$/},"meta: directive":{pattern:/(^|\s)(\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:\#.*(?!.)|(?![\#\s])))*?)(?=\s*[;{])/,captures:{2:Ee}}});const Ie=new C([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/g,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&e},win:(e,t,n)=>{n.set("string-begin",null)},final:!0}],"string",{scopes:"string",highlight:(e,t)=>{let n=e.pop(),a=m(e);return[De.parse(a,t),n]}}),Oe=new C([{name:"string-begin",pattern:/^\s*('|")/,win:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:Ie}}],"attribute-value"),Te=new C([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:Oe}}],"attribute-separator"),Ce=new C([{name:"tag tag-html tag-html-custom",pattern:/^[a-zA-Z][a-zA-Z-:]*(?=\s|>|&gt;)/},{name:"tag tag-html",pattern:/^[a-zA-Z][a-zA-Z:]*(?=\s|>|&gt;)/},{name:"attribute-name",pattern:/^\s*(?:\/)?[a-zA-Z][a-zA-Z-:]*(?=\=)/,after:{name:"attribute-separator",lexer:Te}},{name:"punctuation",pattern:/\/(?:>|&gt;)/,final:!0},{name:"punctuation",pattern:/(>|&gt;)/,final:!0}],"tag"),Pe=new C([{name:"punctuation",pattern:/^(?:<|&lt;)/,after:{name:"tag",lexer:Ce},final:!0}],"tag-start",{scopes:"element element-opening"}),Le=new x({"meta: php directive":{name:"embedded",pattern:/((?:<|&lt;)\?(?:php)?)([\s\S]*?)(\?(?:>|&gt;))/,captures:{1:"punctuation punctuation-start",2:()=>Ge,3:"punctuation punctuation-end"},wrapReplacement:!0}}),De=new x({escape:{pattern:/\\./}});De.extend(Le);const Fe=new x({"meta: empty single-quoted string":{name:"string string-single-quoted",pattern:/(')(')/},"meta: empty double-quoted string":{name:"string string-double-quoted",pattern:/(")(")/},"string string-double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:()=>De}},"string string-single-quoted":{pattern:/(')(.*?[^\\])(')/,wrapReplacement:!0,captures:{2:()=>De}},attribute:{pattern:/\b([a-zA-Z][a-zA-Z-:]*)(=)/,captures:{1:"attribute-name",2:"punctuation"}}}),Ne=new x({"constant constant-html-entity constant-html-entity-named":{pattern:/(&amp;)[a-z]+;/},"constant constant-html-entity constant-html-entity-numeric":{pattern:/(&amp;)\#([0-9]+|[xX][0-9a-fA-F]+);/}}),Me=new x("php",{},{encode:!0});Me.extend(Le),Me.extend({"embedded embedded-javascript":{pattern:/(&lt;|<)(script|SCRIPT)(\s+.*?)?(&gt;|>)([\s\S]*?)((?:&lt;|<)\/)(script|SCRIPT)(&gt;|>)/,index:(e,t)=>u(e,Pe),replacement:l("\n      <span class='element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n        #{5}\n      <span class='element element-closing'>\n        <span class='punctuation'>#{6}</span>\n        <span class='tag'>#{7}</span>\n        <span class='punctuation'>#{8}</span>\n      </span>\n    "),captures:{3:Fe},before:(e,t)=>{t.highlighter&&(e[5]=t.highlighter.parse(e[5],"javascript",t))}},"element element-opening":{pattern:/(<|&lt;)([a-zA-Z][a-zA-Z-:]*)(?:(\s+)([\s\S]*))?(.)(&gt;|>)/,replacement:l("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag tag-html'>#{2}</span>\n        #{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index(e,t){let{index:n,highlighted:a}=d(e,Pe,t);return t.set("lexer-highlighted",a),n},after(e,t){let n=t.get("lexer-highlighted");return t.set("lexer-highlighted",!1),n||e}},"element element-closing element-closing-custom":{pattern:/((?:<|&lt;)\/)([a-zA-Z:\-]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html tag-html-custom",3:"punctuation"},wrapReplacement:!0},"element element-closing":{pattern:/((?:<|&lt;)\/)([a-zA-Z:]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html",3:"punctuation"},wrapReplacement:!0},"element element-doctype":{pattern:/((?:<|&lt;)!)(DOCTYPE)(\s+)(html)([\s\S]*?)(>|&gt;)/,captures:{1:"punctuation",2:"keyword special",4:"keyword special",5:Fe,6:"punctuation"},wrapReplacement:!0},comment:{pattern:/(?:<|&lt;)!\s*(--([^-]|[\r\n]|-[^-])*--\s*)(?:>|&gt;)/}}),Me.extend(Ne);const Ge=new x("php",{}),Be=new x({escape:{pattern:/\\./},"meta: exclude from group begin":{pattern:/\\\(/,replacement:"#{0}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),Ue=new x({"constant constant-escape":{pattern:/\\./},"variable with braces":{name:"variable variable-interpolation",pattern:/\$+\{\w+\}/},"variable without braces":{name:"variable variable-interpolation",pattern:/\$+(?:\w+\b|(?=\{))/}}),Xe=new x({"constant constant-boolean":{pattern:/\b(?:false|true)\b/},number:{pattern:/\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/},variable:{pattern:/\$+(?:\w+\b|(?=\{))/},"constant constant-named":{pattern:/\b[A-Z_]+\b/},"string string-double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{1:"punctuation punctuation-start",2:()=>Ue,3:"punctuation punctuation-end"}},"string string-single-quoted":{pattern:/(')([^']*?)(')/}}),Qe=new x({"variable variable-parameter":{pattern:/\$+(?:\w+\b|(?=\{))/},operator:{pattern:/=/}});Qe.extend(Xe),Ge.extend({"meta: preg_* regexps":{pattern:/\b(preg_[a-z_]+)(\s*)(\()(['"])([\s\S]+)(\4)/,index(e,t,n){let a=n[4],r=n[5].substring(0,1),s=o(e,{"(":")","{":"}","[":"]"}[r]||r,r,{startIndex:e.indexOf(a)+2,considerEscapes:!1});return e.indexOf(a,s)},before(e,t){e[5]=c(e[5],"regexp")},captures:{3:"punctuation punctuation-start",4:"string",5:()=>Be,6:"string"}},"meta: function definition":{pattern:/\b(function)(\s+)([a-z_]\w*)(\s*)(\()([\s\S]*)(\))/,index:(e,t)=>o(e,")","(",{startIndex:e.indexOf("(")}),captures:{1:"keyword keyword-function",3:"entity entity-function",5:"punctuation punctuation-start",6:()=>Qe,7:"punctuation punctuation-end"}},comment:{pattern:/\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/}}),Ge.extend(Xe),Ge.extend({keyword:{pattern:/\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/},operator:{pattern:/(?:<|&lt;)?=(?:>|&gt;)|\?\?=?|\.{3}|\??-(?:>|&gt;)|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||(<<|&lt;&lt;)|(>>|&gt;&gt;)|[?~]|(?:<|&lt;)=?|(?:>|&gt;)=?|[/^|%*&.+-]=?/}});const We=new x({interpolation:{pattern:/\{(\d*)\}/},"escape escape-hex":{pattern:/\\x[0-9a-fA-F]{2}/},"escape escape-octal":{pattern:/\\[0-7]{3}/},escape:{pattern:/\\./}}),He=new x({lambda:{pattern:/(lambda)(\s+)(.*?)(:)/,captures:{1:"keyword storage",3:()=>Je}},"string string-triple-quoted":{pattern:/"""[\s\S]*?"""/,before:(e,t)=>{e[0]=We.parse(e[0],t)}},"string string-raw string-single-quoted":{pattern:/([urb]+)(')(.*?[^\\]|[^\\]*)(')/,replacement:"<span class='storage string'>#{1}</span><span class='#{name}'>#{2}#{3}#{4}</span>",captures:{3:()=>We}},"string string-single-quoted":{pattern:/([ub])?(')((?:[^'\\]|\\.)*)(')/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>We}},"string string-double-quoted":{pattern:/([ub])?(")((?:[^"\\]|\\.)*)(")/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>We}},constant:{pattern:/\b(self|None|True|False)\b/,before(e,t){e[1]=c(e[1],`constant constant-${e[1].toLowerCase()}`)},replacement:"#{1}"},"constant constant-assignment":{pattern:/^([A-Z][A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},"constant constant-named":{pattern:/\b([A-Z_]+)(?!\.)\b/},"variable variable-assignment":{pattern:/([a-z_][[A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},number:{pattern:/(\b|-)((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b/},"number number-binary":{pattern:/0b[01]+/},"number number-octal":{pattern:/0o[0-7]+/}}),Ye=new x({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable variable-parameter",3:"keyword",4:He}}}).extend(He),Je=new x({"meta: parameter":{pattern:/(\s*)(\*\*?)?([A-Za-z0-9_]+)(?=,|$)/,captures:{2:"keyword operator",3:"variable variable-parameter"}}}),Ke=new x({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable variable-parameter",3:"keyword operator",4:()=>He}}}).extend(Je);function Ve(e,t){return e.indexOf(t)>-1}function et(e,t){let n=o(e.slice(t).join(""),"}","{",{stackDepth:1});if(-1===n)return;let a=0;for(let r=t;r<e.length;r++)if(a+=e[r].length,a>=n)return r}function tt(e,t,n){let a=[];for(let r=t;r<=n;r++)a.push(e[r]);return a.join(",")}function nt(e,t,n){t||(t=at);let a=e.split(/,/),r=[];for(let e,t=0;t<a.length;t++)if(e=a[t],Ve(s=e,"{")&&!Ve(s,"}")){let e=et(a,t+1),n=tt(a,t,e);r.push(n),t=e}else r.push(e);var s;return r.map((e=>t.parse(e,n)))}new x("python",{"storage storage-type support":{pattern:/(int|float|bool|chr|str|bytes|list|dict|set)(?=\()/},"meta: exclude format method on strings":{pattern:/(\.)(format)\b/,captures:{}},"support support-builtin":{pattern:/\b(?:abs|aiter|all|any|anext|ascii|bin|breakpoint|bytearray|callable|classmethod|compile|complex|delattr|dir|divmod|enumerate|eval|exec|filter|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|isinstance|issubclass|iter|len|locals|map|max|memoryview|min|next|object|oct|open|ord|pow|print|property|range|repr|reversed|round|setattr|slice|sorted|staticmethod|sum|super|tuple|type|vars|zip|__import__)\b(?=\()/},"meta: from/import/as":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(\s+)(as)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword",9:"keyword"}},"meta: from/import":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword"}},"meta: subclass":{pattern:/(class)(\s+)([\w\d_]+)(\()([\w\d_]*)(\))(\s*)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation",5:"entity entity-class entity-superclass",6:"punctuation",8:"punctuation"}},"meta: class":{pattern:/(class)(\s+)([\w\d_]+)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation"}},comment:{pattern:/#[^\n]*(?=\n)/},"keyword storage":{pattern:/\b(?:global|nonlocal)\b/},keyword:{pattern:/\b(?:if|else|elif|print|class|pass|from|import|raise|while|try|finally|except|return|for|in|del|with)\b/},"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_]+)(\s*)(\()([\s\S]*?)?(\))/,captures:{1:"keyword",3:"entity",5:"punctuation",6:Ke,7:"punctuation"}},"meta: method invocation":{pattern:/([A-Za-z0-9_!?]+)(\s*)(\()(\s*)([\s\S]*)(\s*\))/,index:e=>o(e,")","(",e.indexOf("(")),captures:{3:"punctuation",5:()=>Ye,6:"punctuation"}},"keyword operator operator-logical":{pattern:/\b(and|or|not)\b/},"keyword operator operator-bitwise":{pattern:/(?:&amp;|\||~|\^|>>|<<|&(?![a-z]+;))/},"keyword operator operator-assignment":{pattern:/=/},"keyword operator operator-comparison":{pattern:/(?:>=|<=|!=|==|>|<|&lt;|&gt;)/},"keyword operator operator-arithmetic":{pattern:/(?:\+=|\-=|=|\+|\-|%|\/\/|\/|\*\*|\*)/}}).extend(He);const at=new x({"meta: parameter with default":{pattern:/^(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*)/,captures:{2:"variable variable-parameter",3:"keyword operator",4:()=>st}},"meta: variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable variable-parameter"}}}),rt=new x({"meta: block variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable variable-parameter"}}}),st=new x({"named constant":{pattern:/\b([A-Z][A-Z0-9_]*)\b/,captures:{1:"constant"}},"string string-single-quoted":{pattern:/(')([^']*?)(')/},"string string-double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:()=>it}},"string string-double-quoted empty":{pattern:/\"\"/},"string string-percent-q string-percent-q-braces":{pattern:/(%Q\{)([\s\S]*)(\})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>it}},"string string-percent-q string-percent-q-parens":{pattern:/(%Q\()([\s\S]*)(\))/,index:e=>o(e,")","(",{startIndex:e.indexOf("(")}),wrapReplacement:!0,captures:{2:()=>it}},"string string-percent-q string-percent-q-brackets":{pattern:/(%Q\[)([\s\S]*)(\])/,index:e=>o(e,"]","[",{startIndex:e.indexOf("[")}),wrapReplacement:!0,captures:{2:()=>it}},"string embedded string-shell-command":{pattern:/(`)([^`]*?)(`)/,wrapReplacement:!0,captures:{2:()=>it}},constant:{pattern:/\b(self|true|false|nil(?!\?))\b/},"number binary":{pattern:/\b0b[01](?:_[01]|[01])*\b/},number:{pattern:/\b(\d(?:[_.]\d|\d)*)\b/},"punctuation punctuation-namespace":{pattern:/(::)/},symbol:{pattern:/:[A-Za-z0-9_!?]+/},"symbol single-quoted":{pattern:/:'([^']*?)'/},"symbol double-quoted":{pattern:/(:)(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{3:()=>it}},regexp:{pattern:/(\/)(.*?)(\/)/,wrapReplacement:!0,captures:{2:()=>pt}},"variable variable-instance":{pattern:/(@)[a-zA-Z_][\w\d]*/},"variable variable-global":{pattern:/(\$)[a-zA-Z_][\w\d]*/},keyword:{pattern:/\b(begin|do|class|def|if|module|yield|then|else|for|until|unless|while|elsif|case|when|break|retry|redo|rescue|return|require|lambda)\b/}}),pt=new x({escape:{pattern:/\\./},"meta: exclude from group begin":{pattern:/\\\(/,replacement:"#{0}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),it=new x({escape:{pattern:/\\./},interpolation:{pattern:/(#\{)(.*?)(\})/,captures:{1:"punctuation",2:()=>ot,3:"punctuation"},wrapReplacement:!0}}),ot=new x("ruby",{"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?.]+)(?:\s*(\()(.*?)(\)))?/,captures:{1:"keyword",3:"entity"},before:(e,t)=>{e[5]&&(e[5]=nt(e[5],null,t))}},"block block-braces":{pattern:/(\{)(\s*)(\|)([^|]*?)(\|)/,replacement:l("\n      <b class='#{name}'>\n        <span class='punctuation'>#{1}</span>#{2}\n        <span class='punctuation'>#{3}</span>\n        #{4}\n        <span class='punctuation'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=nt(e[4],rt,t)}},"block block-do-end":{pattern:/(do)(\s*)(\|)([^|]*?)(\|)/,replacement:l("\n      <b class='#{name}'>\n        <span class='keyword keyword-do'>#{1}</span>#{2}\n        <span class='punctuation'>#{3}</span>\n        #{4}\n        <span class='punctuation'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=nt(e[4],null,t),e[6]=ot.parse(e[6],t)}},"meta: class definition with superclass":{pattern:/(class)(\s+)([A-Z][A-Za-z0-9_]*)(\s*(?:<|&lt;)\s*)([A-Z][A-Za-z0-9:_]*)/,replacement:l("\n      <span class='keyword keyword-class'>#{1}</span>#{2}\n      <span class='entity entity-class'>#{3}</span>\n      <span class='punctuation'>#{4}</span>\n      <span class='entity entity-class entity-superclass'>#{5}</span>\n    ")},"meta: class or module definition":{pattern:/(class|module)(\s+)([A-Z][\w\d]*)(\s*)(?=$|\n)/,replacement:l("\n      #{1}#{2}#{3}#{4}\n    "),before(e,t){let n=e[1];e[1]=c(e[1],`keyword keyword-${n}`),e[3]=c(e[3],`entity entity-${n}`)}},"string heredoc-indented":{pattern:/(&lt;&lt;-|<<-)([_\w]+?)\b([\s\S]+?)(\2)/,replacement:l("\n      <span class='#{name}'>\n        <span class='heredoc-begin'>#{1}#{2}</span>\n        #{3}\n        <span class='heredoc-end'>#{4}</span>\n      </span>\n    "),captures:{3:()=>it}}});ot.extend(st),ot.extend({"keyword operator":{pattern:/(\+|-|\*|\/|<<|&lt;&lt;|>|&gt;|<|&lt;|=>|=&gt;|>>|&gt;&gt;|=~|\|\|=|==|=|\|\||&&|\+=|-=|\*=|\/=)/},"keyword keyword-special":{pattern:/\b(initialize|new|loop|extend|raise|attr|catch|throw|private|protected|public|module_function|attr_(?:reader|writer|accessor))\b/},comment:{pattern:/#[^\n]+/},"bracket-block-end":{pattern:/\}/,replacement:"#{0}",after(e,t){let n=t.get("bracesStack",[]).pop();if(n)return`${e} \x3c!-- close ${n} --\x3e</b>`}},"keyword keyword-block-end":{pattern:/\b(end)\b/,after(e,t){let n=t.get("bracesStack",[]).pop();if(n)return`${e} \x3c!-- close ${n} --\x3e</b>`}}});const lt=new x({"support support-function-call support-function-call-css-builtin":{pattern:/(attr|counter|rgb|rgba|hsl|hsla|calc)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>yt,4:"punctuation"}},"support support-function-call support-function-call-sass":{pattern:/(red|green|blue|mix|hue|saturation|lightness|adjust-hue|lighten|darken|saturate|desaturate|grayscale|complement|invert|alpha|opacity|opacify|transparentize|fade-in|fade-out|selector-(?:nest|replace)|unquote|quote|str-(?:length|insert|index|slice)|to-(?:upper|lower)-case|percentage|round|ceil|floor|abs|min|max|random|(?:feature|variable|global-variable|mixin)-exists|inspect|type-of|unit|unitless|comparable|call|if|unique-id)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>yt,4:"punctuation"}},"support support-function-call support-function-call-url":{pattern:/(url)(\()(.*)(\))/,index:e=>o(e,")","(",{startIndex:e.indexOf("(")}),replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{let n=Et.parse(e[3],t);/^('|")/.test(e[3])||(n=ct.parse(e[3],t),n=`<span class='string string-unquoted'>${n}</span>`),e[3]=n}},"support support-function-call support-function-call-custom":{pattern:/([A-Za-z_-][A-Za-z0-9_-]*)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>yt,4:"punctuation"}}}),ct=new x({interpolation:{pattern:/(\#\{)(.*?)(})/,captures:{1:"punctuation interpolation-begin",2:()=>yt,3:"punctuation interpolation-end"},wrapReplacement:!0}});function ut(e){return new x({[e]:{pattern:/\$[A-Za-z0-9_-]+/}})}const dt=ut("variable"),mt=new x({"variable variable-assignment":{pattern:/(\s*)(\$[A-Za-z][A-Za-z0-9_-]*)\b(\s*)(\:)([\s\S]*?)(;)/,captures:{2:"variable variable-assignment",4:"punctuation",5:()=>yt}}}).extend(dt),gt=new x({"meta: parameter with default":{pattern:/(\$[\w\-][\w\d\-]*)(\s*)(:)(\s*)(.*?)(?=,|\)|\n)/,captures:{1:"variable variable-parameter",3:"punctuation",5:()=>yt}}}).extend(ut("variable variable-parameter")),bt=new x({"selector selector-class selector-abstract-class":{pattern:/(%)[a-zA-Z0-9_-]+/},"selector selector-element-wildcard":{pattern:/\*/},"selector selector-element":{pattern:/\b(a|abbr|acronym|address|area|article|aside|applet|audio|b|base|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video)\b/},"selector selector-class":{pattern:/\.[a-zA-Z][a-zA-Z0-9_\-]*\b/},"selector selector-id":{pattern:/#[a-zA-Z][a-zA-Z0-9_-]*/},"selector selector-pseudo selector-pseudo-not":{pattern:/(:not\()(.*)(\))/,replacement:l("\n      <span class='#{name}'>\n        #{1}\n        <span class='parameter'>#{2}</span>\n        #{3}\n      </span>\n    "),captures:{2:()=>bt}},"meta: BEM self-reference pattern":{pattern:/(&amp;)((?:__|--)(?:[\w\d\-]+)?)/,captures:{1:"selector selector-self-reference-bem-style selector-element",2:"selector selector-class selector-self-reference-bem-style"}},"selector selector-interpolation embedded":{pattern:/(#\{)(.*)(\})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>yt}},"selector selector-self-reference":{pattern:/(?:&amp;|&)/},"selector selector-pseudo selector-pseudo-with-args":{pattern:/((?:\:+)\b(?:lang|nth-(?:last-)?child|nth-(?:last-)?of-type))(\()(.*)(\))/,wrapReplacement:!0,captures:{3:()=>yt}},"selector selector-pseudo selector-pseudo-without-args":{pattern:/(:{1,2})(link|visited|hover|active|focus|targetdisabled|enabled|checked|indeterminate|root|first-child|last-child|first-of-type|last-of-type|only-child|only-of-type|empty|valid|invalid|root)/},"selector selector-pseudo selector-pseudo-element":{pattern:/(:{1,2})(-(?:webkit|moz|ms)-)?\b(after|before|first-letter|first-line|selection|any-link|local-link|(?:input-)?placeholder|focus-inner|matches|nth-match|column|nth-column)\b/},"selector selector-attribute":{pattern:/(\[)([A-Za-z_-][A-Za-z0-9_-]*)(?:([~\.$^]?=)((['"])(?:.*?)(?:\5)|[^\s\]]))?(\])/,wrapReplacement:!0,captures:{4:()=>kt}},"selector selector-combinator":{pattern:/(\s*)([>+~])(\s*)/,replacement:"#{1}<span class='#{name}'>#{2}</span>#{3}"}}),ft=new x({"meta: map pair":{pattern:/([a-zA-Z_-][a-zA-Z0-9_-]*)(\s*:\s*)(.*(?:,|\)|$))/,captures:{1:"entity",2:"punctuation",3:()=>yt}}}),wt=new x({"operator operator-logical":{pattern:/\b(and|or|not)\b/}}),ht=new x({"operator operator-arithmetic":{pattern:/\*|\+|\-(?=\s|\(|\d|$)|\//},"operator operator-comparison":{pattern:/!=|==|</}}).extend(wt),yt=new x({"meta: variable without fallback":{pattern:/(var\(\s*)(--[a-z-]+[a-z])(\))/,captures:{1:"storage",2:"variable variable-custom-property"}},"meta: variable with fallback":{pattern:/(var\(\s*)(--[a-z-]+[a-z])(\s*,\s*)([\s\S]+)(\))/,index(e,t){let n=e.indexOf("(",e.indexOf("(")+1);return o(e,")","(",{startIndex:n,startDepth:1})+1},captures:{1:"storage",2:"variable variable-custom-property",4:()=>yt}},"meta: possible map":{pattern:/(\()([\s\S]+)(\))/,replacement:"#{1}#{2}#{3}",before:(e,t)=>{let n=yt;/[A-Za-z_-][A-Za-z0-9_-]*:.*(?:,|\)|$)/.test(e[2])&&(n=ft),e[2]=n.parse(e[2],t)}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},constant:{pattern:/\b(?:null)\b/},"support support-property-value":{pattern:/inherit|initial|unset|none|auto|inline-block|block|inline|absolute|relative|solid|dotted|dashed|nowrap|normal|bold|italic|underline|overline|double|uppercase|lowercase|(?:border|content)-box/},"meta: value with unit":{pattern:/([\+|\-]?(?:\s*)?(?:[0-9]+(?:\.[0-9]+)?|\.[0-9]+))(\s*)((?:ch|cm|deg|dpi|dpcm|dppx|em|ex|grad|in|mm|ms|pc|pt|px|rad|rem|turn|s|vh|vmin|vw)\b|%)/,captures:{1:"number",3:"unit"}}}).extend(ht,dt),xt=new x({number:{pattern:/[\+|\-]?(\s*)?([0-9]+(\.[0-9]+)?|\.[0-9]+)/}}),kt=new x({"string single-quoted":{pattern:/(')([^']*?)(')/,wrapReplacement:!0,captures:{2:ct}},"string double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:ct}},"string single-quoted string-empty":{pattern:/''/},"string double-quoted string-empty":{pattern:/""/}}),vt=new x({"constant color-hex":{pattern:/#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b/},"constant color-named":{pattern:/\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b/}}),$t=new x({"keyword directive":{pattern:/\s+!(?:default|important|optional)/}});yt.extend(lt,kt,vt,xt,$t,{support:{pattern:/\b([\w-]+)\b/}});const At=new x({"comment comment-line":{pattern:/(?:\s*)\/\/(?:.*?)(?=\n)/},"comment comment-block":{pattern:/(?:\s*)(\/\*)([\s\S]*)(\*\/)/}}),_t=new x({"meta: custom property pair":{pattern:/(--[\-a-z]+)(\s*:\s*)([^;]+)(;)/,captures:{1:"variable variable-custom-property",3:()=>yt}},"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(;)/,captures:{1:"property",3:()=>yt}}}),zt=new x({support:{pattern:/\b(?:only|screen)\b/},"meta: property group":{pattern:/(\()(.*)(\))/,replacement:"#{1}#{2}#{3}",captures:{2:()=>qt}}}).extend(wt),Zt=new x({}).extend(lt,ht,yt),Rt=new x({}).extend(gt,yt,{"string string-unquoted":{pattern:/\b\w+\b/}}),jt=new x({"meta: from/to":{pattern:/\b(from|to)\b(\s*)(?={)/,captures:{1:"keyword"}},"meta: percentage":{pattern:/(\d+%)(\s*)(?={)/,captures:{1:()=>yt}}}).extend(_t),St=new x({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,replacement:'<span class="property">#{1}</span>#{2}#{3}#{4}',captures:{1:"property",2:"punctuation",3:()=>yt}}}).extend(wt),qt=new x({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,captures:{1:"property",3:()=>yt}}}),Et=new x({}).extend(kt,mt,lt),It=new x({"meta: at-rule":{pattern:/(@(?:elseif|if|else))(.*)({)/,captures:{1:"keyword keyword-at-rule keyword-at-rule-if",2:Zt}},"keyword keyword-at-rule keyword-at-rule-keyframes":{pattern:/(@keyframes)(\s+)([a-z-]+)(\s*)({)([\s\S]*)(})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),captures:{1:"keyword keyword-at-rule keyword-at-rule-keyframes",3:"entity",6:jt}},"keyword keyword-at-rule keyword-at-rule-log-directive":{pattern:/(@(?:error|warn|debug))(\s+|\()(.*)(\)?;)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:kt}},"keyword keyword-at-rule keyword-at-rule-each":{pattern:/(@each)(.*)\b(in)\b(.*)(\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{2:()=>mt,3:"keyword",4:()=>yt}},"keyword keyword-at-rule keyword-at-rule-for":{pattern:/(@for)(.*)\b(from)\b(.*)(through)(.*)({)/,replacement:l("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}#{6}#{7}\n    "),captures:{2:()=>mt,3:"keyword",4:()=>yt,5:"keyword",6:()=>yt}},"keyword keyword-at-rule keyword-at-rule-mixin":{pattern:/(@mixin)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:l("\n      <span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:gt}},"keyword keyword-at-rule keyword-at-rule-function":{pattern:/(@function)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:l("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:gt}},"keyword keyword-at-rule keyword-at-rule-extend":{pattern:/(@extend)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{e[3]=bt.parse(e[3],t),e[3]=e[3].replace(/(class=)(["'])(?:selector)\b/g,"$1$2entity parameter"),/!optional$/.test(e[3])&&(e[3]=e[3].replace(/(!optional)$/,"<span class='keyword keyword-directive'>$1</span>"))}},"keyword keyword-at-rule keyword-at-rule-include":{pattern:/(@include)(\s+)([A-Za-z][A-Za-z0-9\-_]+)(?:(\s*\())?([\s\S]*?)(;|\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"function",5:Rt}},"keyword keyword-at-rule keyword-at-rule-media":{pattern:/(@media)(.*)({)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:zt}},"keyword keyword-at-rule keyword-at-rule-import":{pattern:/(@import)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:kt}},"keyword keyword-at-rule keyword-at-rule-content":{pattern:/(@content)(?=;)/},"keyword keyword-at-rule keyword-at-rule-charset":{pattern:/(@charset)(\s+)(.*)(;)(\s*)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:kt}},"keyword keyword-at-rule keyword-at-rule-namespace":{pattern:/(@namespace)(\s+)(?:([a-zA-Z][a-zA-Z0-9]+)(\s+))?([^\s]*)(;)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"selector",5:lt},before:(e,t)=>{e[3]||(e[4]="")}},"keyword keyword-at-rule keyword-at-rule-supports":{pattern:/(@supports)(\s+)(.*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:St}},"keyword keyword-at-rule keyword-at-rule-font-face":{pattern:/(@font-face)(\s*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}"},"keyword keyword-at-rule keyword-at-rule-return":{pattern:/(@return)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{3:()=>yt}}}),Ot=new x("scss",{});Ot.extend(lt,mt,It),Ot.extend({"meta: selector line":{pattern:/(^\s*)((?:[>\+~]|\.|\#|\[|(?:&|&amp;)|%|\*|:|(?:a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b).*)(,|\{)/,index:e=>((e,t,n,a)=>{let r;for(let s=a;s<n.length;s++){let a=n.slice(s,s+e.length);if(r!==t&&a===e)return s;r=a.slice(-1)}})("{","#",e,0),captures:{2:bt}}}),Ot.extend(_t,At);const Tt=new x({variable:{pattern:/(\$[\d\w_\-]+)\b|(\$\{[\d\w_\-]+\})/}}),Ct=new x({variable:{pattern:/(\$[\w_\-]+)\b/}}),Pt=new x("shell",{comment:{pattern:/#[^\n]*(?=\n|$)/},string:{pattern:/(?:'[^']*'|"[^"]*")/,before:(e,t)=>{e[0]=Tt.parse(e[0],t)}},function:{pattern:/(\w[\w\d_\-]+)(?=\()/},"meta: function definition":{pattern:/\b(function)(\s+)([a-zA-Z_$-]\w*)(\s*)(?={)/,replacement:'<span class="keyword keyword-function">#{1}</span>#{2}<span class="entity">#{3}</span>#{4}'},"shell-command shell-command-backticks":{pattern:/(`)([^`]*)(`)/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=Ct.parse(e[2],t)}},"shell-command":{pattern:/(\$\()(.*?)(\))/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=Ct.parse(e[2],t)}},"support support-builtin":{pattern:/\b(?:sudo|chmod|chown|cd|mkdir|ls|cat|echo|touch|mv|cp|rm|ln|sed|awk|tr|xargs|yes|pbcopy|pbpaste|trap)\b/},"support support-other":{pattern:/\b(?:ruby|gem|rake|python|pip|easy_install|node|npm|php|perl|bash|sh|zsh|gcc|go|mate|subl|atom|pulsar|nano|pico|curl|vim|vi|emacs)(?=\s|$)/},"meta: handle ip address":{pattern:/\b([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\b/,replacement:"#{1}.#{2}.#{3}.#{4}",before:(e,t)=>{for(let t=1;t<=4;t++)e[t]=c(e[t],"number")}},number:{pattern:/\b(?:[0-9]+(\.[0-9]+)?)\b/},constant:{pattern:/\b(?:false|true|SIGTERM|SIGINT|SIGKILL)\b/},"constant constant-home":{pattern:/(^|\s*|\n)~(?=\b|\/)/},keyword:{pattern:/\b(?:if|fi|case|esac|for|in|do|else|then|while|exit|done|shift)\b/},operator:{pattern:/>|&gt;|&amp;&amp;|&amp;|&&|&/},variable:{pattern:/(\$[\w_\-]+)\b/},"meta: subshell with $() notation":{pattern:/\b(\$\()(.*?)(\))/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=Pt.parse(e[2],t)}},"variable-assignment":{pattern:/([A-Za-z_][A-Za-z0-9_]*)(=)/,replacement:"<span class='variable'>#{1}</span><span class='operator'>#{2}</span>"},"variable variable-in-braces":{pattern:/\$\{.+?}(?=\n|\b)/}},{alias:["bash"]}),Lt=new w("worker");function Dt(e,t,n){let a=x.find(t);return a?a.parse(e,n):e}onmessage=function(e){let t=Lt.enabled,{type:n,logger:a}=e.data;switch(a&&Lt.toggle(a),Lt.log("Message:",e),n){case"parse":{let{language:t,text:n,id:a}=e.data,r=Dt(n,t,new b({highlighter:{parse:Dt}}));postMessage({id:a,language:t,source:r});break}}Lt.toggle(t)}}));
