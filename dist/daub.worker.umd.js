!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e){return null==e?"":String(e)}function t(e){let t=e.toString();return t=t.replace(/^\//,""),t=t.replace(/\/[mgiy]*$/,""),t}function n(n,r,s){let p="";if("function"!=typeof s){let e=new a(s);s=t=>e.evaluate(t)}if(r.flags&&r.flags.indexOf("g")>-1?r=function(e){let n=e.flags.replace("g","");return new RegExp(t(e),n)}(r):"string"==typeof r&&(r=String(r).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")),!r)return(s=s(""))+n.split("").join(s)+s;for(;n.length>0;){let t=n.length,a=n.match(r);if(a){let r,i=s(a,n);if(Array.isArray(i)&&([i,r]=i),p+=n.slice(0,a.index),p+=e(i),(n=void 0!==r?n.slice(a.index+r):n.slice(a.index+a[0].length)).length===t)throw new Error("Infinite loop detected; none of the string was consumed.")}else p+=n,n=""}return p}class a{constructor(e){this.template=String(e),this.pattern=a.DEFAULT_PATTERN}evaluate(t){return n(this.template,this.pattern,(n=>{if(null==t)return"";let a=n[1]||"";if("\\"==a)return n[2];let r=t,s=n[3],p=/^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;if(null==(n=p.exec(s)))return a;for(;null!=n;){if(r=r["["===n[1].charAt(0)?n[2].replace(/\\]/,"]"):n[1]],null==r||""===n[3])break;s=s.substring("["===n[3]?n[1].length:n[0].length),n=p.exec(s)}return a+e(r)}))}}function r(){return"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope}function s(){return"undefined"!=typeof CustomEvent}function p(e){return"string"==typeof e}function i(e){return Array.isArray(e)?e:[e]}function o(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};r=Object.assign({startIndex:0,startDepth:0,considerEscapes:!0},r);let{startIndex:s,startDepth:p,considerEscapes:i}=r,o=t.length,l=n.length,c=e.length;for(let r=s;r<c;r++){r>0&&(a=e.slice(r-1,r));let s=!!i&&"\\"===a,c=e.slice(r,r+o);if(e.slice(r,r+l)!==n||s||p++,c===t&&!s&&(p--,0===p))return r}return-1}function l(e){return e=(e=e.replace(/^[\s\t]*/gm,"")).replace(/\n/g,"")}function c(e,t){return e?`<span class="${t}">${e}</span>`:""}function u(e,t,n){let a,p;a=performance.now(),performance.mark&&performance.mark("daub-lexer-before");let i=t.run(e,n);if(p=performance.now(),performance.mark&&(performance.mark("daub-lexer-after"),performance.measure("daub-lexer-before","daub-lexer-after")),!r()&&s()){let e=new CustomEvent("daub-lexer-time",{bubbles:!0,detail:p-a});document.dispatchEvent(e)}return i.lengthConsumed-1}function d(e,t,n){let a,i;a=performance.now(),performance.mark&&performance.mark("daub-lexer-before");let o=t.run(e,n,{highlight:!0});if(i=performance.now(),performance.mark&&(performance.mark("daub-lexer-after"),performance.measure("daub-lexer-before","daub-lexer-after")),!r()&&s()){let e=new CustomEvent("daub-lexer-time",{bubbles:!0,detail:i-a});document.dispatchEvent(e)}let l=g(o).map((e=>{let t;if(p(e))return e;if(e.open)t=p(e.open)?`<span class="${e.open}">`:"";else if(e.close)t=p(e.close)?"</span>":"";else{let n=e.scopes||e.name;t=n?`<span class="${n}">${e.content}</span>`:e.content}return t})).join("");return{index:o.lengthConsumed-1,highlighted:l}}function m(e){let t=[];e=i(e);for(let n of e)if(p(n))t.push(n);else if(n.content){let e=m(i(n.content));t.push(...e)}return t.join("")}function g(e){let t=[];if(p(e))return[e];if(e.content)if(p(e.content))t.push({name:e.name,scopes:e.scopes,content:e.content});else{e.scopes&&t.push({open:e.scopes});for(let n of i(e.content))t.push(...g(n));e.scopes&&t.push({close:e.scopes})}return t}a.DEFAULT_PATTERN=/(^|.|\r|\n)(#\{(.*?)\})/,a.interpolate=function(e,t){return new a(e).evaluate(t)};class b{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.highlighter&&(this.highlighter=e.highlighter),this.storage=new Map}set(e,t){this.storage.set(e,t)}get(e,t){return this.storage.has(e)?this.storage.get(e):(this.storage.set(e,t),t)}}class w extends Error{constructor(e){super(e),this.name="ParseError"}}class f{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};"object"!=typeof e||t?(this.name=e,this.names=[e,...n.alias||[]],this._classNamePattern=new RegExp("\\b(?:"+this.names.join("|")+")\\b")):(this.name=null,n=t||n,t=e),this.options=n,this.rules=[],this._originalRules=t,this.extend(t),this.name&&this.names.forEach((e=>{f.register(e,this)}))}_toObject(){return{...this._originalRules}}parse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=this.pattern;return a.lastIndex=0,t||(t=new b({highlighter:{parse:e=>e}})),a.test(e)?n(e,a,((e,n)=>{let r,s,p,i=0,o=1;for(;r=this.rules[i++];){if(!e[o]){o+=r.length;continue}if(r.index&&(p=r.index(e[0],t),p<=0&&(p=void 0),void 0!==p&&(s=p+1,n=n.slice(0,e.index+s),!(e=a.exec(n))||!e[o]))){let t=new w('Bad "index" callback; requested substring did not match original rule.');throw Object.assign(t,{rule:r,source:n,match:e,index:p}),t}let i=[];for(let t=0;t<=r.length;t++)i.push(e[o+t]);if(i.name=r.name,r.captures)for(let e=0;e<i.length;e++){if(!(e in r.captures))continue;let n="function"==typeof(l=r.captures[e])?l():l;"string"==typeof n?i[e]=c(i[e],n):n instanceof f&&i[e]&&(i[e]=n.parse(i[e],t))}if(r.before){let e=r.before(i,t);void 0!==e&&(i=e)}let u=r.replacement;i.name||(i.name=r.name),i.index=e.index;let d=u.evaluate(i);if(r.after){let e=r.after(d,t);void 0!==e&&(d=e)}return void 0!==p?[d,s]:d}var l;return""})):e}_makeRules(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=[];for(let[a,r]of Object.entries(e)){let e=r.name||a,s=new y(e,r,t);n.push(s),t+=s.length}return n}match(e){return this._classNamePattern.test(e)}extend(){let e;for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];if(1!==n.length)return n.forEach((e=>this.extend(e))),this;if(e=n[0],e instanceof f&&(e=e.toObject()),!e)throw new Error("Nonexistent grammar!");let r=0;this.rules.length&&(r=this.rules.map((e=>e.length)).reduce(((e,t)=>e+t)));let s=e,p=this._makeRules(s,r);return this.rules.push(...p),this.pattern=new RegExp(this.rules.map((e=>e.pattern)).join("|"),this.options.ignoreCase?"mi":"m"),this}toObject(){let e={};return this.rules.forEach((t=>{e[t.name]=t.toObject()})),e}}const h={};f.register=(e,t)=>{h[e]=t},f.find=e=>h[e]||null;class y{constructor(e,n,r){this.name=e;let s=n.replacement;s?this.replacement=s instanceof a?s:new a(s):n.captures?this.replacement=null:this.replacement=y.DEFAULT_TEMPLATE,this.debug=n.debug,this.before=n.before,this.after=n.after,this.index=n.index,this.captures=n.captures;let p=n.pattern,i=n.pattern;"string"!=typeof i&&(i=t(i)),i=i.replace(/\\(\d+)/g,((e,t)=>{let n=Number(t);return`\\${r+n+1}`}));let o=(i.match(/\(/g)||"").length,l=(i.match(/\(\?[:!=]/g)||"").length+(i.match(/\\\(/g)||"").length-(i.match(/\\\(\?[:!=]/g)||"").length;this.length=o+1-l,this.pattern=`(${i})`,this.originalPattern=p,this.replacement||(this.replacement=y.makeReplacement(this.length,n.wrapReplacement))}toObject(){return{pattern:this.originalPattern,replacement:this.replacement,before:this.before,after:this.after,index:this.index,captures:this.captures}}}y.DEFAULT_TEMPLATE=new a('<span class="#{name}">#{0}</span>'),y.makeReplacement=(e,t)=>{let n=[];for(let t=1;t<e;t++)n.push(t);let r=n.join("}#{");return r=`#{${r}}`,new a(t?`<span class="#{name}">${r}</span>`:r)};let x=new f({"meta: parameter":{pattern:/(?:\b|^)((?:(?:[A-Za-z_$][\w\d]*)\s)*)(\s*)([a-zA-Z_$:][\w\d]*)(?=,|$)/,captures:{1:()=>_,3:"variable variable-parameter"}}}),k=new f({escape:{pattern:/\\./}});const v=new f({"meta: function":{pattern:/([A-Za-z_$]\w*)(\s+)([a-zA-Z_$:]\w*)(\s*)(\()(.*)(\))(\s*)(?={)/,index(e){let t=o(e,")","(",{startIndex:e.indexOf("(")});return e.indexOf("{",t)-1},captures:{1:"storage storage-type storage-return-type",3:"entity",6:()=>x}},"meta: bare declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(?=;)/,captures:{1:"storage storage-type",3:"variable"}},"meta: declaration with assignment":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(=)/,captures:{1:"storage storage-type",3:"variable",5:"operator"}},"meta: array declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\[)(\d+)(\])/,captures:{1:"storage storage-type",3:"variable",4:"punctuation",5:"number",6:"punctuation"}},"meta: declaration with parens":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(\()([\s\S]*)(\))(;)/,index(e){let t=o(e,")","(")+1;return e.indexOf(";",t)},captures:{1:"storage storage-type",3:"variable",5:"punctuation",6:()=>$,7:"punctuation"}},"meta: class declaration":{pattern:/\b(class|enum)(\s+)([A-Za-z][A-Za-z0-9:_$]*)(\s*)({)/,captures:{1:"storage storage-type",3:"entity entity-class"}}}),$=new f({constant:{pattern:/\b[A-Z_]+\b/},lambda:{pattern:/(\[\])(\s*)(\()([\s\S]*)(\))(\s*)({)([\s\S]*)(})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{1:"punctuation",3:"punctuation",4:()=>x,5:"punctuation",7:"punctuation",8:()=>j,9:"punctuation"}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\')*)(')/,wrapReplacement:!0,captures:{2:()=>k}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\[rnt]|\\\\|\\")*)(")/,wrapReplacement:!0,captures:{2:()=>k}},number:{pattern:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i}}),A=new f({comment:{pattern:/(\/\/[^\n]*(?=\n|$))|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/}}),_=new f({"storage storage-type":{pattern:/\b(?:u?int(?:8|16|36|64)_t|int|long|float|double|char(?:16|32)_t|char|class|bool|wchar_t|volatile|virtual|extern|mutable|const|unsigned|signed|static|struct|template|private|protected|public|mutable|volatile|namespace|struct|void|short|enum)/}}),z=new f({}).extend(A,$),Z=new f({"macro macro-define":{pattern:/^(\#define)(\s+)(\w+)(.*?)$/,replacement:l('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="entity entity-macro">#{3}</span>\n      #{4}\n    '),captures:{1:"keyword keyword-macro",3:"entity entity-macro",4:()=>z}},"macro macro-include":{pattern:/^(\#include)(\s+)("|<|&lt;)(.*?)("|>|&gt;)(?=\n|$)/,replacement:l('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="string string-include">\n        <span class="punctuation">#{3}</span>\n        #{4}\n        <span class="punctuation">#{5}</span>\n      </span>\n    ')},"macro macro-with-one-argument":{pattern:/(\#(?:ifdef|ifndef|undef|if))(\s+)(\w+)/,captures:{1:"keyword keyword-macro",3:"entity entity-macro"}},"macro macro-error":{pattern:/(#error)(\s*)(")(.*)(")/,replacement:l('\n      <span class="keyword keyword-macro">#{1}</span>\n      #{2}\n      <span class="string string-quoted">#{3}#{4}#{5}</span>\n    ')},"keyword keyword-macro":{pattern:/#(endif|else)/}}),j=new f("arduino",{"keyword keyword-control":{pattern:/\b(?:alignas|alignof|asm|auto|break|case|catch|compl|constexpr|const_cast|continue|decltype|default|delete|do|dynamic_cast|else|explicit|export|for|friend|goto|if|inline|new|noexcept|nullptr|operator|register|reinterpret_cast|return|sizeof|static_assert|static_cast|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|using|while)\b/},support:{pattern:/\b(?:printf|sprintf|strpos|strstr|strcat)/}}).extend(A,v);function q(e){return"function"==typeof e?e():e}function S(e,t){let n=e.final;if("boolean"==typeof n)return n;if("function"==typeof n)return n(t);if(n)throw new TypeError("Invalid value for rule.final!");return!1}j.extend(Z,$,_,{operator:{pattern:/--?|\+\+?|!=?|(?:<|&lt;){1,2}=?|(&gt;|>){1,2}=?|-(?:>|&gt;)|:{1,2}|={1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/}});class R extends Error{constructor(e){super(e),this.name="LexerError"}}class E{constructor(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.name=e,this.content=t,this.index=a+n,this.scopes=r.scopes}}class I{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.rules=e,this.name=t,this.scopes=n.scopes,this.silent=!!n.silent,this.highlight=n.highlight}addRules(e){this.rules.push(...e)}[Symbol.iterator](){let e=[];for(let t of this.rules)if(t.include){let n=q(t.include);e.push([...n])}else e.push(t);return e.values()}run(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,{startIndex:n=0,highlight:a=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[];t||(t=new b);let s=null,p=n;for(;e;){let n,i,o;for(let a of this){if(o=a.pattern.exec(e),o&&a.test){a.test(o,e,t,a.pattern)||(o=null)}if(o){if(0===o.index){i=o,n=a;break}(!i||o.index<i.index)&&(i=o,n=a)}}if(!i)break;n.win&&n.win(i,e,t);let l=i.index,c=i.index+i[0].length;if(i.index>0){let t=e.slice(0,i.index);r.push(t),p+=t.length,l=0}e=e.slice(c);let u=S(n,t),d=u&&n.skipSubRulesIfFinal;if(n.trim){if(n.raw)throw new R('Options "trim" and "raw" cannot coexist on a rule!');let e=i[0],t=/^[\n\s\t]+/.exec(e);t&&(r.push(t[0]),i[0]=i[0].slice(t[0].length),p+=t[0].length)}if(n.raw)r.push(i[0]),p+=i[0].length;else if(!n.inside&&!n.after||d){let e=new E(n.name,i[0],l,p,{scopes:n.scopes||n.name});r.push(e),p+=i[0].length}else{let s,o,c;if(n.inside?(c="inside",s=n.inside.name,o=q(n.inside.lexer)):(c="after",s=n.after.name,o=q(n.after.lexer)),!(o&&o instanceof I))throw new R("Invalid lexer!");let u=new E(n.name,i[0],l,p,{scopes:n.scopes||n.name}),d=p+i[0].length-l,m=[];"inside"===c?m.push(u):r.push(u);let g=o.run(e,t,{startIndex:d,highlight:a});m.push(...g.tokens);let b=new E(s,m,l,p,{scopes:g.scopes});r.push(b),p=g.lengthConsumed,e=g.text}if(u)break;if(e===s)break;s=e}return a&&this.highlight&&(r=this.highlight(r,t)),{name:this.name,scopes:this.scopes,content:r,tokens:r,text:e,lengthConsumed:p}}}const O=new I([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string",{scopes:"string"}),T=new I([{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:O}}],"attribute-value"),P=new I([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:T}}],"attribute-separator"),C=new I([{name:"tag tag-html tag-html-custom",pattern:/^[a-zA-Z][a-zA-Z-:]*(?=\s|>|&gt;)/},{name:"tag tag-html",pattern:/^[a-zA-Z][a-zA-Z:]*(?=\s|>|&gt;)/},{name:"attribute-name",pattern:/^\s*(?:\/)?[a-zA-Z][a-zA-Z-:]*(?=\=)/,after:{name:"attribute-separator",lexer:P}},{name:"punctuation",pattern:/\/(?:>|&gt;)/,final:!0},{name:"punctuation",pattern:/(>|&gt;)/,final:!0}],"tag"),F=new I([{name:"punctuation",pattern:/^(?:<|&lt;)/,after:{name:"tag",lexer:C}}],"tag-start",{scopes:"element element-opening"}),L=new f({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z][a-zA-Z-:]*)(=)/,captures:{1:"attribute-name",2:"punctuation"}}}),D=new f({"constant constant-html-entity constant-html-entity-named":{pattern:/(&amp;)[a-z]+;/},"constant constant-html-entity constant-html-entity-numeric":{pattern:/(&amp;)\#([0-9]+|[xX][0-9a-fA-F]+);/}});new f("html",{"embedded embedded-javascript":{pattern:/(&lt;|<)(script|SCRIPT)(\s+.*?)?(&gt;|>)([\s\S]*?)((?:&lt;|<)\/)(script|SCRIPT)(&gt;|>)/,replacement:l("\n      <span class='element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n        #{5}\n      <span class='element element-closing'>\n        <span class='punctuation'>#{6}</span>\n        <span class='tag'>#{7}</span>\n        <span class='punctuation'>#{8}</span>\n      </span>\n    "),captures:{3:L},before:(e,t)=>{t.highlighter&&(e[5]=t.highlighter.parse(e[5],"javascript",t))}},"element element-opening":{pattern:/(<|&lt;)([a-zA-Z][a-zA-Z-:]*)(?:(\s+)([\s\S]*))?(.)(&gt;|>)/,replacement:l("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag tag-html'>#{2}</span>\n        #{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index(e,t){let{index:n,highlighted:a}=d(e,F,t);return t.set("lexer-highlighted",a),n},after(e,t){let n=t.get("lexer-highlighted");return t.set("lexer-highlighted",!1),n||e}},"element element-closing element-closing-custom":{pattern:/((?:<|&lt;)\/)([a-zA-Z:\-]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html tag-html-custom",3:"punctuation"},wrapReplacement:!0},"element element-closing":{pattern:/((?:<|&lt;)\/)([a-zA-Z:]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html",3:"punctuation"},wrapReplacement:!0},"element element-doctype":{pattern:/((?:<|&lt;)!)(DOCTYPE)(\s+)(html)([\s\S]*?)(>|&gt;)/,captures:{1:"punctuation",2:"keyword special",4:"keyword special",5:L,6:"punctuation"},wrapReplacement:!0},comment:{pattern:/(?:<|&lt;)!\s*(--([^-]|[\r\n]|-[^-])*--\s*)(?:>|&gt;)/}},{encode:!0}).extend(D);const N=new I([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string",{scopes:"string"}),M=new I([{name:"exclude escaped punctuation",pattern:/\\\{/,raw:!0},{name:"punctuation",pattern:/\{/,inside:{name:"inside-brace",lexer:()=>M}},{name:"punctuation",pattern:/\}/,final:!0}],"balance-braces"),G=new I([{name:"exclude escaped punctuation",pattern:/\\\{/,raw:!0},{name:"punctuation",pattern:/\{/,inside:{name:"inside-brace",lexer:M}},{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"punctuation interpolation-end",pattern:/\}/,final:!0}],"template-string-interpolation"),U=new I([{name:"interpolation-start",pattern:/(\$\{)/,inside:{name:"interpolation",lexer:G},final:!0}],"template-string-interpolation-start"),B=new I([{name:"interpolation-start",pattern:/(\$\{)/,inside:{name:"interpolation",lexer:G}},{name:"exclude escaped backtick",pattern:/\\\x60/,raw:!0},{name:"string-end",pattern:/\x60/,final:!0}],"template-string"),Q=new I([{name:"string-start",pattern:/\x60/,final:!0,after:{name:"string string-template",lexer:B}}],"template-string-start"),X=new I([{name:"punctuation interpolation-begin",pattern:/\{/,inside:{lexer:M}},{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"string-begin",pattern:/^\s*('|")/,win(e,t,n){n.set("string-begin",e[1])},inside:{name:"string",lexer:N}},{name:"template-string-begin",pattern:/\x60/,inside:{name:"template-string",lexer:B}},{name:"punctuation interpolation-end",pattern:/\}/,final:!0}],"jsx-interpolation",{highlight:(e,t)=>{let n=e.pop(),a=m(e);return[ze.parse(a,t),n]},scopes:"embedded jsx-interpolation"}),W=new I([{name:"punctuation interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:X}}],"before-jsx-interpolation"),H=new I([{name:"punctuation interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:X},final:!0},{name:"string-begin",pattern:/^\s*('|")/,win(e,t,n){n.set("string-begin",e[1])},inside:{name:"string",lexer:N}}],"attribute-value"),J=new I([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:H}}],"attribute-separator"),K=new I([{name:"tag HTML",scopes:"tag tag-html",pattern:/^[a-z]+(?=&gt;|>)/},{name:"tag JSX",scopes:"tag tag-jsx",pattern:/^[A-Z][A-Za-z0-9_$\.]*(?=&gt;|>)/},{name:"punctuation",pattern:/^\s*(?:>|&gt;)/,win(e,t,n){let a=n.get("jsx-tag-depth");if(a<1)throw new Error("Depth error!");a--,n.set("jsx-tag-depth",a)},trim:!0,final:!0}],"jsx-closing-tag",{scopes:"jsx-element element element-closing"}),Y=new I([{name:"punctuation interpolation-begin",pattern:/^\s*\{/,inside:{name:"interpolation",lexer:X},trim:!0},{name:"attribute-name",pattern:/^\s*[a-zA-Z][a-zA-Z0-9_$-]+(?=\=)/,after:{name:"attribute-separator",lexer:J},trim:!0},{name:"attribute-name",pattern:/^\s*[a-zA-Z][a-zA-Z0-9_$-]+(?=\s)/,trim:!0},{name:"punctuation punctuation-self-closing",pattern:/^\s*\/(?:>|&gt;)/,win(e,t,n){n.set("is-opening-tag",null)},trim:!0,final:e=>e.get("is-root")},{name:"punctuation",pattern:/^\s*(>|&gt;)/,test(e,t,n){let a=n.get("jsx-tag-depth");return a+=n.get("is-opening-tag")?1:-1,0!==a},win(e,t,n){let a=n.get("jsx-tag-depth");return a+=n.get("is-opening-tag")?1:-1,n.set("jsx-tag-depth",a),n.set("is-opening-tag",null),e},trim:!0,final:e=>{let t=e.get("jsx-tag-depth");return e.get("only-opening-tag")||0===t},skipSubRulesIfFinal:!0,after:{name:"jsx-contents",lexer:()=>V}}],"inside-tag"),V=new I([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,trim:!0,after:{name:"tag",lexer:()=>ee}},{name:"punctuation",pattern:/(?:<|&lt;)\/(?=[A-Za-z])/,inside:{name:"element jsx-element",lexer:K},final:!0},{name:"punctuation interpolation-begin",pattern:/\{/,inside:{name:"interpolation",lexer:X}}],"within-tag"),ee=new I([{name:"tag tag-html",pattern:/^[a-z\-]+(?=\s|(?:>|&gt;))/,test:(e,t,n)=>(n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e),trim:!0,after:{name:"jsx-tag-contents",lexer:Y},final:e=>e.get("only-opening-tag")},{name:"tag tag-jsx",pattern:/^[A-Z][\w\d$\.]*(?=\s|(?:>|&gt;))/,test:(e,t,n)=>(n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e),after:{name:"jsx-tag-contents",lexer:Y}}],"tag-name"),te=new I([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("only-opening-tag",!0),e),trim:!0,after:{name:"tag",lexer:ee,silent:!0},final:!0}],"tag-open-start"),ne=new I([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("is-root",!0),e),trim:!0,after:{name:"tag",lexer:ee,silent:!0}}],"tag-root",{scopes:"jsx-element element element-opening"});let ae=new f({escape:{pattern:/\\./}}),re=new f({escape:{pattern:/\\./},"exclude from group begin":{pattern:/(\\\()/,replacement:"#{1}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),se=new f({interpolation:{pattern:/(\$\{)(.*)(\})/,index:(e,t)=>u(e,U,t),captures:{1:"punctuation interpolation-start",2:()=>ze,3:"punctuation interpolation-end"},wrapReplacement:!0}}).extend(ae);const pe=new f({"meta: parameter with default":{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*=\s*)(.*?)(?=,|\)|\n|$)/,captures:{1:"variable parameter",2:"keyword operator",3:()=>we}},"keyword operator":{pattern:/\.{3}/},operator:{pattern:/=/},"variable variable-parameter":{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/}});let ie=new f({"string string-template":{pattern:/(`)([\s\S]*)(`)/,index:(e,t)=>u(e,Q,t),captures:{1:"punctuation string-start",2:se,3:"punctuation string-end"},wrapReplacement:!0},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\.)*)(')/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",captures:{2:ae}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\.)*)(")/,captures:{2:ae},wrapReplacement:!0}}),oe=new f({"embedded jsx-interpolation":{pattern:/(\{)([\s\S]*)(\})/,index:e=>u(e,W),captures:{1:"punctuation embedded-start",2:()=>ze,3:"punctuation embedded-end"},wrapReplacement:!0}}),le=new f({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z-:]+)(=)/,captures:{1:"attribute-name",2:"punctuation"},wrapReplacement:!0}}).extend(oe),ce=new f({});ce.extend(le),ce.extend(oe),ce.extend({"punctuation punctuation-tag-close":{pattern:/>|\/>/}});let ue=new f({jsx:{pattern:/(<|&lt;)([a-zA-Z_$][a-zA-Z0-9_$\.]*\s*)([\s\S]*)(&gt;|>)/,index:(e,t)=>{let{index:n,highlighted:a}=d(e,ne,t);return t.set("lexer-highlighted",a),n},replacement:"<span class='jsx'>#{0}</span>",after:(e,t)=>t&&t.get("lexer-highlighted")||e}});function de(e){return e.match(/^[A-Z]/)?c(e,"tag tag-jsx"):c(e,"tag tag-html")}let me=new f({"meta: opening tag without attributes":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(&gt;|>)/,replacement:l("\n      <span class='jsx-element element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        #{2}\n        <span class='punctuation'>#{3}</span>\n      </span>\n    "),before(e,t){e[2]=de(e[2])}},"tag tag-open":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(\s+)([\s\S]*)(.)(&gt;|>)/,replacement:l("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        #{2}#{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index:e=>u(e,te),before(e,t){e.name="jsx-element element element-opening",e[2]=de(e[2]),e[5]&&("/"===e[5]?(e.name=e.name.replace("element-opening","element-self"),e[5]=c(e[5],"punctuation")):(e[4]+=e[5],e[5]="")),e[4]=le.parse(e[4],t)}},"tag tag-close":{pattern:/((?:<|&lt;)\/)([\w$][\w\d_$\.]*)(\s*)(&gt;|>)/,before(e,t){e[2]=de(e[2])},replacement:l("\n      <span class='jsx-element element element-closing'>\n        <span class='punctuation'>#{1}</span>\n        #{2}#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n    ")}});new f({}).extend(oe,me);let ge=new f({params:{pattern:/(\()([^)]+)(\))/,wrapReplacement:!0,captures:{1:"punctuation",2:pe,3:"punctuation"}},"variable variable-parameter":{pattern:/[\w$][\w\d_$]*/}}),be=new f({"meta: single-parameter multiline arrow function":{pattern:/([\w$][\w\d$]*)(\s*)(=(?:>|&gt;))/,captures:{1:ge,3:"operator"}},"meta: arrow function with params in parentheses":{pattern:/(\([^)]+\))(\s*)(=(?:>|&gt;))/,captures:{1:ge,3:"operator"}},"single line arrow function":{pattern:/(\(?[^)]\)?|[a-zA-Z_$][a-zA-Z0-9_$]*)(\s*)(=(?:>|&gt;))(\s*)/,captures:{1:ge,3:"operator"}}}),we=new f({});we.extend({constant:{pattern:/\b(?:arguments|this|false|true|super|null|undefined)\b/},"number number-binary-or-octal":{pattern:/0[bo]\d+/},number:{pattern:/(?:\d*\.?\d+)/}}),we.extend(be),we.extend(ie),we.extend({comment:{pattern:/(\/\/[^\n]*(?=\n|$))|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/},regexp:{pattern:/(\/)(.*?[^\\])(\/)([mgiy]*)/,captures:{2:re,4:"keyword regexp-flags"},wrapReplacement:!0}});let fe=new f({alias:{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*)(:)(\s*)(?=\w|\{|\[)/,captures:{1:"entity"}},variable:{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/},operator:{pattern:/=/}}),he=new f("import specifiers",{ordinary:{pattern:/(^|,)([\s\n]*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import"}},"default as":{pattern:/(^|,)([\s\n]*)(default)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"keyword keyword-default",5:"keyword keyword-as",7:"variable variable-import"}},"foo as bar":{pattern:/(^|,)([\s\n]*)([\w$][\w\d$]*)(\s+)(as)(\s+)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import",5:"keyword keyword-as",7:"variable variable-import"}}}),ye=new f("import specifier",{"implicit default specifier":{pattern:/^(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=,|$)/,captures:{2:"variable variable-import"}},specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:he}}}),xe=new f({"import with destructuring":{pattern:/(^\s*)(import)(\s*)(?=\{)([\s\S]*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:ye,6:"keyword keyword-from",8:ie}},"import with source":{pattern:/(^\s*)(import)(\s*)(.*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>ye,6:"keyword keyword-from",8:()=>ie}},"import without source":{pattern:/(^\s*)(import)(\s*)(?=\`|'|")(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>ie}}}),ke=new f("export specifiers",{ordinary:{pattern:/(^|,)(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-export"}},"as default":{pattern:/(^|,)(\s*)([\w$][\w\d$]*)(\s*)(as)(\s*)(default)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-export",5:"keyword keyword-as",7:"keyword keyword-default"}},"as [identifier]":{pattern:/(^|,)(\s*)([\w$][\w\d$]*)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import",5:"keyword keyword-as",7:"variable variable-export"}}}),ve=new f("export specifier",{specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:ke}}}),$e=new f("exports",{"export with destructuring":{pattern:/(^\s*)(export)(\s*)(?=\{)([\s\S]*?\s*\})/,captures:{2:"keyword keyword-export",4:ve}},"export default with identifier":{pattern:/(^\s*)(export)(\s+)(default)(\s+)([\w$][\w\d$]*)/,captures:{2:"keyword keyword-export",4:"keyword keyword-default",6:"variable variable-export"}},"export by itself or with default":{pattern:/(^\s*)(export)(\s+)(default)?(\s*)(?=let|const|var|function|\[|\{)/,captures:{2:"keyword keyword-export",4:"keyword keyword-default"}}}),Ae=new f({"keyword operator":{pattern:/\|\||&&|&amp;&amp;|!==?|={1,3}|(?:>=|&gt;=)|(?:<=|&lt;=)|\+\+|\+|--|-|\*|[\*\+-\/]=|\.{3}|\b(?:instanceof|in|of)\b|!|void|\.|(?:>|&gt;)|(?:<|&lt;)/},"meta: ternary colon":{pattern:/(\s+)(\?|:)(\s+)/,captures:{2:"keyword operator operator-ternary"}}}),_e=new f({});_e.extend(me),_e.extend(we),_e.extend(be),_e.extend(Ae);let ze=new f("javascript-jsx",{},{alias:["react","javascript","js"]});ze.extend(ue),ze.extend(xe),ze.extend($e),ze.extend(we),ze.extend({"meta: exclude digits in the middle of identifiers":{pattern:/\$\d/,replacement:"#{0}"},"meta: properties with keyword names":{pattern:/(\.)(for|if|while|switch|catch|return)\b/,replacement:"#{0}"},"meta: functions with keyword names":{pattern:/(\s*)\b(for|if|while|switch|catch)\b/,replacement:"#{1}<span class='keyword'>#{2}</span>"},"meta: new keyword plus identifier":{pattern:/(new)(\s+)((?:[\w$][\w\d$]*\.)*)([\w$][\w\d$]*)(?=\()/,captures:{1:"keyword keyword-new",3:()=>Ae,4:"entity-class"}},"meta: variable declaration":{pattern:/\b(var|let|const)(\s+)([\w$][\w\d$]*?)(\s*)(?=\s|=|;|,)/,captures:{1:"storage",3:"variable"}},"meta: variable assignment":{pattern:/(\s+|,)([A-Za-z_$][\w\d$]*?)(\s*)(?==)(?!=(?:>|&gt;))/,captures:{2:"variable"}},"meta: destructuring assignment":{pattern:/(let|var|const)(\s+)(\{|\[)([\s\S]*)(\}|\])(\s*)(=)/,index:e=>{let t=/(let|var|const|)(\s+)(\{|\[)/.exec(e)[3],n=o(e,{"{":"}","[":"]"}[t],t),a=e.indexOf("=",n);return e.slice(0,a+1),a},captures:{1:"storage",4:fe,7:"operator"}},"function function-expression":{pattern:/\b(function)(\s*)([a-zA-Z_$]\w*)?(\s*)(\()(.*?)(\))/,captures:{1:"keyword keyword-function",3:"entity",5:"punctuation",6:pe,7:"punctuation"}},"function function-literal-shorthand-style":{pattern:/(^\s*)(get|set|static)?(\s*)([\w$][\w\d$]*)(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{2:"storage",4:"entity",6:"punctuation",7:pe,8:"punctuation"}},"meta: function shorthand with computed property name":{pattern:/(])(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{3:"punctuation",4:pe,5:"punctuation",7:"punctuation"}},"function function-assigned-to-variable":{pattern:/\b([\w$][\w\d$]*)(\s*)(=)(\s*)(function)(\s*)(\()(.*?)(\))/,captures:{1:"variable",3:"operator",5:"keyword",7:"punctuation",8:pe,9:"punctuation"}},"meta: property then function":{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(:)(\s*)(?=function)/,captures:{1:"entity",2:"punctuation"}},entity:{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(?=:)/},"meta: class definition":{pattern:/(class)(?:(\s+)([A-Z][A-Za-z0-9_]*))?(?:(\s+)(extends)(\s+)([A-Z][A-Za-z0-9_$\.]*))?(\s*)({)/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")+1}),captures:{1:"storage",3:"entity entity-class",5:"storage",7:"entity entity-class entity-superclass"}},storage:{pattern:/\b(?:var|let|const|class|extends|async|static)\b/},keyword:{pattern:/\b(?:try|catch|finally|if|else|do|while|for|break|continue|case|switch|default|return|yield|throw|await)\b/}}).extend(Ae);const Ze=new f({variable:{pattern:/(\$[\d\w_\-]+)\b/}}),je=new f({"meta: unquoted IP address string":{pattern:/(\s|^)(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:\:\d+)?)/,captures:{2:"string string-unquoted string-ip-address"}},"string string-unquoted string-url":{pattern:/\bhttps?:\/\/.*?(?=;|\s|$)/},"meta: unquoted path string":{pattern:/(\s+|^)((?:[A-Za-z0-9_\-]+)?\/(?:\\\s|.)+?(?=\s|$))/,captures:{2:"string string-unquoted string-path"}},"meta: number":{pattern:/(\s|^)(\d[\d\.]*)/,captures:{2:"number number-integer"}},"meta: string":{pattern:/((?:^|[^\\])(?:\\\\)*)("(?:[^"\\]|\\.|\n)*"|'(?:[^'\\]|\\.|\n)*')/,before(e){e[2]=function(e){let t=e.charAt(0),n=Ze.parse(e.slice(1,-1));return l(`\n    <span class="string string-quoted">\n      <span class="punctuation">${t}</span>\n      ${n}\n      <span class="punctuation">${t}</span>\n    </span>\n  `)}(e[2])},replacement:"#{1}#{2}"},variable:{pattern:/\$[A-Za-z_][A-Za-z0-9_]*/},"meta: boolean":{pattern:/(\s)(off|on)(?!\S)/,captures:{2:"constant constant-boolean"}}});const qe=new f({}).extend(je).extend({"entity entity-function-with-block":{pattern:/^(?:server|location|events|http|upstream|types)(?!\S)/},"support support-function":{pattern:/^\S+/}});new f("nginx",{"comment comment-line":{pattern:/(^|[\s{};])#.*$/},"meta: directive":{pattern:/(^|\s)(\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:\#.*(?!.)|(?![\#\s])))*?)(?=\s*[;{])/,captures:{2:qe}}});const Se=new f({interpolation:{pattern:/\{(\d*)\}/},"escape escape-hex":{pattern:/\\x[0-9a-fA-F]{2}/},"escape escape-octal":{pattern:/\\[0-7]{3}/},escape:{pattern:/\\./}}),Re=new f({lambda:{pattern:/(lambda)(\s+)(.*?)(:)/,captures:{1:"keyword storage",3:()=>Ie}},"string string-triple-quoted":{pattern:/"""[\s\S]*?"""/,before:(e,t)=>{e[0]=Se.parse(e[0],t)}},"string string-raw string-single-quoted":{pattern:/([urb]+)(')(.*?[^\\]|[^\\]*)(')/,replacement:"<span class='storage string'>#{1}</span><span class='#{name}'>#{2}#{3}#{4}</span>",captures:{3:()=>Se}},"string string-single-quoted":{pattern:/([ub])?(')((?:[^'\\]|\\.)*)(')/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>Se}},"string string-double-quoted":{pattern:/([ub])?(")((?:[^"\\]|\\.)*)(")/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>Se}},constant:{pattern:/\b(self|None|True|False)\b/,before(e,t){e[1]=c(e[1],`constant constant-${e[1].toLowerCase()}`)},replacement:"#{1}"},"constant constant-assignment":{pattern:/^([A-Z][A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},"constant constant-named":{pattern:/\b([A-Z_]+)(?!\.)\b/},"variable variable-assignment":{pattern:/([a-z_][[A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},number:{pattern:/(\b|-)((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b/},"number number-binary":{pattern:/0b[01]+/},"number number-octal":{pattern:/0o[0-7]+/}}),Ee=new f({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable variable-parameter",3:"keyword punctuation",4:Re}}}).extend(Re),Ie=new f({"meta: parameter":{pattern:/(\s*)(\*\*?)?([A-Za-z0-9_]+)(?=,|$)/,captures:{2:"keyword operator",3:"variable variable-parameter"}}}),Oe=new f({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable variable-parameter",3:"keyword punctuation",4:()=>Re}}}).extend(Ie);function Te(e,t){return e.indexOf(t)>-1}function Pe(e,t){let n=o(e.slice(t).join(""),"}","{",{stackDepth:1});if(-1===n)return;let a=0;for(let r=t;r<e.length;r++)if(a+=e[r].length,a>=n)return r}function Ce(e,t,n){let a=[];for(let r=t;r<=n;r++)a.push(e[r]);return a.join(",")}function Fe(e,t,n){t||(t=Le);let a=e.split(/,/),r=[];for(let e,t=0;t<a.length;t++)if(e=a[t],Te(s=e,"{")&&!Te(s,"}")){let e=Pe(a,t+1),n=Ce(a,t,e);r.push(n),t=e}else r.push(e);var s;return r.map((e=>t.parse(e,n)))}new f("python",{"storage storage-type support":{pattern:/(int|float|bool|chr|str|bytes|list|dict|set)(?=\()/},"meta: exclude format method on strings":{pattern:/(\.)(format)\b/,captures:{}},"support support-builtin":{pattern:/\b(?:abs|aiter|all|any|anext|ascii|bin|breakpoint|bytearray|callable|classmethod|compile|complex|delattr|dir|divmod|enumerate|eval|exec|filter|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|isinstance|issubclass|iter|len|locals|map|max|memoryview|min|next|object|oct|open|ord|pow|print|property|range|repr|reversed|round|setattr|slice|sorted|staticmethod|sum|super|tuple|type|vars|zip|__import__)\b(?=\()/},"meta: from/import/as":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(\s+)(as)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword",9:"keyword"}},"meta: from/import":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword"}},"meta: subclass":{pattern:/(class)(\s+)([\w\d_]+)(\()([\w\d_]*)(\))(\s*)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation",5:"entity entity-class entity-superclass",6:"punctuation",8:"punctuation"}},"meta: class":{pattern:/(class)(\s+)([\w\d_]+)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation"}},comment:{pattern:/#[^\n]*(?=\n)/},"keyword storage":{pattern:/\b(?:global|nonlocal)\b/},keyword:{pattern:/\b(?:if|else|elif|print|class|pass|from|import|raise|while|try|finally|except|return|for|in|del|with)\b/},"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?]+)(\s*)(\()(.*?)?(\))/,captures:{1:"keyword",3:"entity",5:"punctuation",6:Oe,7:"punctuation"}},"meta: method invocation":{pattern:/([A-Za-z0-9_!?]+)(\s*)(\()(\s*)([\s\S]*)(\s*\))/,index:e=>o(e,")","(",e.indexOf("(")),captures:{3:"punctuation",5:()=>Ee,6:"punctuation"}},"keyword operator operator-logical":{pattern:/\b(and|or|not)\b/},"keyword operator operator-bitwise":{pattern:/(?:&|\||~|\^|>>|<<)/},"keyword operator operator-assignment":{pattern:/=/},"keyword operator operator-comparison":{pattern:/(?:>=|<=|!=|==|>|<)/},"keyword operator operator-arithmetic":{pattern:/(?:\+=|\-=|=|\+|\-|%|\/\/|\/|\*\*|\*)/}}).extend(Re);const Le=new f({"meta: parameter with default":{pattern:/^(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*)/,captures:{2:"variable variable-parameter",3:"keyword operator",4:()=>Ne}},"meta: variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable variable-parameter"}}}),De=new f({"meta: block variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable variable-parameter"}}}),Ne=new f({"named constant":{pattern:/\b([A-Z][A-Z0-9_]*)\b/,captures:{1:"constant"}},"string string-single-quoted":{pattern:/(')([^']*?)(')/},"string string-double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:()=>Ge}},"string string-double-quoted empty":{pattern:/\"\"/},"string string-percent-q string-percent-q-braces":{pattern:/(%Q\{)([\s\S]*)(\})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>Ge}},"string string-percent-q string-percent-q-parens":{pattern:/(%Q\()([\s\S]*)(\))/,index:e=>o(e,")","(",{startIndex:e.indexOf("(")}),wrapReplacement:!0,captures:{2:()=>Ge}},"string string-percent-q string-percent-q-brackets":{pattern:/(%Q\[)([\s\S]*)(\])/,index:e=>o(e,"]","[",{startIndex:e.indexOf("[")}),wrapReplacement:!0,captures:{2:()=>Ge}},"string embedded string-shell-command":{pattern:/(`)([^`]*?)(`)/,wrapReplacement:!0,captures:{2:()=>Ge}},constant:{pattern:/\b(self|true|false|nil(?!\?))\b/},"number binary":{pattern:/\b0b[01](?:_[01]|[01])*\b/},number:{pattern:/\b(\d(?:[_.]\d|\d)*)\b/},"punctuation punctuation-namespace":{pattern:/(::)/},symbol:{pattern:/:[A-Za-z0-9_!?]+/},"symbol single-quoted":{pattern:/:'([^']*?)'/},"symbol double-quoted":{pattern:/(:)(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{3:()=>Ge}},regexp:{pattern:/(\/)(.*?)(\/)/,wrapReplacement:!0,captures:{2:()=>Me}},"variable variable-instance":{pattern:/(@)[a-zA-Z_][\w\d]*/},"variable variable-global":{pattern:/(\$)[a-zA-Z_][\w\d]*/},keyword:{pattern:/\b(begin|do|class|def|if|module|yield|then|else|for|until|unless|while|elsif|case|when|break|retry|redo|rescue|return|require|lambda)\b/}}),Me=new f({escape:{pattern:/\\./},"meta: exclude from group begin":{pattern:/\\\(/,replacement:"#{0}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),Ge=new f({escape:{pattern:/\\./},interpolation:{pattern:/(#\{)(.*?)(\})/,captures:{1:"punctuation",2:()=>Ue,3:"punctuation"},wrapReplacement:!0}}),Ue=new f("ruby",{"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?.]+)(?:\s*(\()(.*?)(\)))?/,captures:{1:"keyword",3:"entity"},before:(e,t)=>{e[5]&&(e[5]=Fe(e[5],null,t))}},"block block-braces":{pattern:/(\{)(\s*)(\|)([^|]*?)(\|)/,replacement:l("\n      <b class='#{name}'>\n        <span class='punctuation'>#{1}</span>#{2}\n        <span class='punctuation'>#{3}</span>\n        #{4}\n        <span class='punctuation'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=Fe(e[4],De,t)}},"block block-do-end":{pattern:/(do)(\s*)(\|)([^|]*?)(\|)/,replacement:l("\n      <b class='#{name}'>\n        <span class='keyword keyword-do'>#{1}</span>#{2}\n        <span class='punctuation'>#{3}</span>\n        #{4}\n        <span class='punctuation'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=Fe(e[4],null,t),e[6]=Ue.parse(e[6],t)}},"meta: class definition with superclass":{pattern:/(class)(\s+)([A-Z][A-Za-z0-9_]*)(\s*(?:<|&lt;)\s*)([A-Z][A-Za-z0-9:_]*)/,replacement:l("\n      <span class='keyword keyword-class'>#{1}</span>#{2}\n      <span class='entity entity-class'>#{3}</span>\n      <span class='punctuation'>#{4}</span>\n      <span class='entity entity-class entity-superclass'>#{5}</span>\n    ")},"meta: class or module definition":{pattern:/(class|module)(\s+)([A-Z][\w\d]*)(\s*)(?=$|\n)/,replacement:l("\n      #{1}#{2}#{3}#{4}\n    "),before(e,t){let n=e[1];e[1]=c(e[1],`keyword keyword-${n}`),e[3]=c(e[3],`entity entity-${n}`)}},"string heredoc-indented":{pattern:/(&lt;&lt;-|<<-)([_\w]+?)\b([\s\S]+?)(\2)/,replacement:l("\n      <span class='#{name}'>\n        <span class='heredoc-begin'>#{1}#{2}</span>\n        #{3}\n        <span class='heredoc-end'>#{4}</span>\n      </span>\n    "),captures:{3:()=>Ge}}});Ue.extend(Ne),Ue.extend({"keyword operator":{pattern:/(\+|-|\*|\/|<<|&lt;&lt;|>|&gt;|<|&lt;|=>|=&gt;|>>|&gt;&gt;|=~|\|\|=|==|=|\|\||&&|\+=|-=|\*=|\/=)/},"keyword keyword-special":{pattern:/\b(initialize|new|loop|extend|raise|attr|catch|throw|private|protected|public|module_function|attr_(?:reader|writer|accessor))\b/},comment:{pattern:/#[^\n]+/},"bracket-block-end":{pattern:/\}/,replacement:"#{0}",after(e,t){let n=t.get("bracesStack",[]).pop();if(n)return`${e} \x3c!-- close ${n} --\x3e</b>`}},"keyword keyword-block-end":{pattern:/\b(end)\b/,after(e,t){let n=t.get("bracesStack",[]).pop();if(n)return`${e} \x3c!-- close ${n} --\x3e</b>`}}});const Be=new f({"support support-function-call support-function-call-css-builtin":{pattern:/(attr|counter|rgb|rgba|hsl|hsla|calc)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>tt,4:"punctuation"}},"support support-function-call support-function-call-sass":{pattern:/(red|green|blue|mix|hue|saturation|lightness|adjust-hue|lighten|darken|saturate|desaturate|grayscale|complement|invert|alpha|opacity|opacify|transparentize|fade-in|fade-out|selector-(?:nest|replace)|unquote|quote|str-(?:length|insert|index|slice)|to-(?:upper|lower)-case|percentage|round|ceil|floor|abs|min|max|random|(?:feature|variable|global-variable|mixin)-exists|inspect|type-of|unit|unitless|comparable|call|if|unique-id)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>tt,4:"punctuation"}},"support support-function-call support-function-call-url":{pattern:/(url)(\()(.*)(\))/,index:e=>o(e,")","(",{startIndex:e.indexOf("(")}),replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{let n=gt.parse(e[3],t);/^('|")/.test(e[3])||(n=Qe.parse(e[3],t),n=`<span class='string string-unquoted'>${n}</span>`),e[3]=n}},"support support-function-call support-function-call-custom":{pattern:/([A-Za-z_-][A-Za-z0-9_-]*)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>tt,4:"punctuation"}}}),Qe=new f({interpolation:{pattern:/(\#\{)(.*?)(})/,captures:{1:"punctuation interpolation-begin",2:()=>tt,3:"punctuation interpolation-end"},wrapReplacement:!0}});function Xe(e){return new f({[e]:{pattern:/\$[A-Za-z0-9_-]+/}})}const We=Xe("variable"),He=new f({"variable variable-assignment":{pattern:/(\s*)(\$[A-Za-z][A-Za-z0-9_-]*)\b(\s*)(\:)([\s\S]*?)(;)/,captures:{2:"variable variable-assignment",4:"punctuation",5:()=>tt}}}).extend(We),Je=new f({"meta: parameter with default":{pattern:/(\$[\w\-][\w\d\-]*)(\s*)(:)(\s*)(.*?)(?=,|\),\n)/,captures:{1:"variable variable-parameter",3:"punctuation",5:()=>tt}}}).extend(Xe("variable variable-parameter")),Ke=new f({"selector selector-class selector-abstract-class":{pattern:/(%)[a-zA-Z0-9_-]+/},"selector selector-element-wildcard":{pattern:/\*/},"selector selector-element":{pattern:/\b(a|abbr|acronym|address|area|article|aside|applet|audio|b|base|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video)\b/},"selector selector-class":{pattern:/\.[a-zA-Z][a-zA-Z0-9_\-]*\b/},"selector selector-id":{pattern:/#[a-zA-Z][a-zA-Z0-9_-]*/},"selector selector-pseudo selector-pseudo-not":{pattern:/(:not\()(.*)(\))/,replacement:l("\n      <span class='#{name}'>\n        #{1}\n        <span class='parameter'>#{2}</span>\n        #{3}\n      </span>\n    "),captures:{2:()=>Ke}},"meta: BEM self-reference pattern":{pattern:/(&amp;)((?:__|--)(?:[\w\d\-]+)?)/,captures:{1:"selector selector-self-reference-bem-style selector-element",2:"selector selector-class selector-self-reference-bem-style"}},"selector selector-interpolation embedded":{pattern:/(#\{)(.*)(\})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>tt}},"selector selector-self-reference":{pattern:/(?:&amp;|&)/},"selector selector-pseudo selector-pseudo-with-args":{pattern:/((?:\:+)\b(?:lang|nth-(?:last-)?child|nth-(?:last-)?of-type))(\()(.*)(\))/,wrapReplacement:!0,captures:{3:()=>tt}},"selector selector-pseudo selector-pseudo-without-args":{pattern:/(:{1,2})(link|visited|hover|active|focus|targetdisabled|enabled|checked|indeterminate|root|first-child|last-child|first-of-type|last-of-type|only-child|only-of-type|empty|valid|invalid)/},"selector selector-pseudo selector-pseudo-element":{pattern:/(:{1,2})(-(?:webkit|moz|ms)-)?\b(after|before|first-letter|first-line|selection|any-link|local-link|(?:input-)?placeholder|focus-inner|matches|nth-match|column|nth-column)\b/},"selector selector-attribute":{pattern:/(\[)([A-Za-z_-][A-Za-z0-9_-]*)(?:([~\.$^]?=)((['"])(?:.*?)(?:\5)|[^\s\]]))?(\])/,wrapReplacement:!0,captures:{4:()=>at}},"selector selector-combinator":{pattern:/(\s*)([>+~])(\s*)/,replacement:"#{1}<span class='#{name}'>#{2}</span>#{3}"}}),Ye=new f({"meta: map pair":{pattern:/([a-zA-Z_-][a-zA-Z0-9_-]*)(\s*:\s*)(.*(?:,|\)|$))/,captures:{1:"entity",2:"punctuation",3:()=>tt}}}),Ve=new f({"operator operator-logical":{pattern:/\b(and|or|not)\b/}}),et=new f({"operator operator-arithmetic":{pattern:/\*|\+|\-(?=\s|\(|\d|$)|\//},"operator operator-comparison":{pattern:/!=|==|</}}).extend(Ve),tt=new f({"meta: possible map":{pattern:/(\()([\s\S]+)(\))/,replacement:"#{1}#{2}#{3}",before:(e,t)=>{let n=tt;/[A-Za-z_-][A-Za-z0-9_-]*:.*(?:,|\)|$)/.test(e[2])&&(n=Ye),e[2]=n.parse(e[2],t)}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},constant:{pattern:/\b(?:null)\b/},"support support-property-value":{pattern:/inherit|initial|unset|none|auto|inline-block|block|inline|absolute|relative|solid|dotted|dashed|nowrap|normal|bold|italic|underline|overline|double|uppercase|lowercase|(?:border|content)-box/},"meta: value with unit":{pattern:/([\+|\-]?(?:\s*)?(?:[0-9]+(?:\.[0-9]+)?|\.[0-9]+))(\s*)((?:ch|cm|deg|dpi|dpcm|dppx|em|ex|grad|in|mm|ms|pc|pt|px|rad|rem|turn|s|vh|vmin|vw)\b|%)/,captures:{1:"number",3:"unit"}}}).extend(et,We),nt=new f({number:{pattern:/[\+|\-]?(\s*)?([0-9]+(\.[0-9]+)?|\.[0-9]+)/}}),at=new f({"string single-quoted":{pattern:/(')([^']*?)(')/,wrapReplacement:!0,captures:{2:Qe}},"string double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:Qe}},"string single-quoted string-empty":{pattern:/''/},"string double-quoted string-empty":{pattern:/""/}}),rt=new f({"constant color-hex":{pattern:/#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b/},"constant color-named":{pattern:/\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b/}}),st=new f({"keyword directive":{pattern:/\s+!(?:default|important|optional)/}});tt.extend(Be,at,rt,nt,st,{support:{pattern:/\b([\w-]+)\b/}});const pt=new f({"comment comment-line":{pattern:/(?:\s*)\/\/(?:.*?)(?=\n)/},"comment comment-block":{pattern:/(?:\s*)(\/\*)([\s\S]*)(\*\/)/}}),it=new f({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(;)/,captures:{1:"property",3:()=>tt}}}),ot=new f({support:{pattern:/\b(?:only|screen)\b/},"meta: property group":{pattern:/(\()(.*)(\))/,replacement:"#{1}#{2}#{3}",captures:{2:()=>mt}}}).extend(Ve),lt=new f({}).extend(Be,et,tt),ct=new f({}).extend(Je,tt,{"string string-unquoted":{pattern:/\b\w+\b/}}),ut=new f({"meta: from/to":{pattern:/\b(from|to)\b(\s*)(?={)/,captures:{1:"keyword"}},"meta: percentage":{pattern:/(\d+%)(\s*)(?={)/,captures:{1:()=>tt}}}).extend(it),dt=new f({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,replacement:'<span class="property">#{1}</span>#{2}#{3}#{4}',captures:{1:"property",2:"punctuation",3:()=>tt}}}).extend(Ve),mt=new f({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,captures:{1:"property",3:()=>tt}}}),gt=new f({}).extend(at,He,Be),bt=new f({"meta: at-rule":{pattern:/(@(?:elseif|if|else))(.*)({)/,captures:{1:"keyword keyword-at-rule keyword-at-rule-if",2:lt}},"keyword keyword-at-rule keyword-at-rule-keyframes":{pattern:/(@keyframes)(\s+)([a-z-]+)(\s*)({)([\s\S]*)(})/,index:e=>o(e,"}","{",{startIndex:e.indexOf("{")}),captures:{1:"keyword keyword-at-rule keyword-at-rule-keyframes",3:"entity",6:ut}},"keyword keyword-at-rule keyword-at-rule-log-directive":{pattern:/(@(?:error|warn|debug))(\s+|\()(.*)(\)?;)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:at}},"keyword keyword-at-rule keyword-at-rule-each":{pattern:/(@each)(.*)\b(in)\b(.*)(\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{2:()=>He,3:"keyword",4:()=>tt}},"keyword keyword-at-rule keyword-at-rule-for":{pattern:/(@for)(.*)\b(from)\b(.*)(through)(.*)({)/,replacement:l("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}#{6}#{7}\n    "),captures:{2:()=>He,3:"keyword",4:()=>tt,5:"keyword",6:()=>tt}},"keyword keyword-at-rule keyword-at-rule-mixin":{pattern:/(@mixin)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:l("\n      <span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:Je}},"keyword keyword-at-rule keyword-at-rule-function":{pattern:/(@function)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:l("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:Je}},"keyword keyword-at-rule keyword-at-rule-extend":{pattern:/(@extend)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{e[3]=Ke.parse(e[3],t),e[3]=e[3].replace(/(class=)(["'])(?:selector)\b/g,"$1$2entity parameter"),/!optional$/.test(e[3])&&(e[3]=e[3].replace(/(!optional)$/,"<span class='keyword keyword-directive'>$1</span>"))}},"keyword keyword-at-rule keyword-at-rule-include":{pattern:/(@include)(\s+)([A-Za-z][A-Za-z0-9\-_]+)(?:(\s*\())?([\s\S]*?)(;|\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"function",5:ct}},"keyword keyword-at-rule keyword-at-rule-media":{pattern:/(@media)(.*)({)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:ot}},"keyword keyword-at-rule keyword-at-rule-import":{pattern:/(@import)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:at}},"keyword keyword-at-rule keyword-at-rule-content":{pattern:/(@content)(?=;)/},"keyword keyword-at-rule keyword-at-rule-charset":{pattern:/(@charset)(\s+)(.*)(;)(\s*)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:at}},"keyword keyword-at-rule keyword-at-rule-namespace":{pattern:/(@namespace)(\s+)(?:([a-zA-Z][a-zA-Z0-9]+)(\s+))?([^\s]*)(;)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"selector",5:Be},before:(e,t)=>{e[3]||(e[4]="")}},"keyword keyword-at-rule keyword-at-rule-supports":{pattern:/(@supports)(\s+)(.*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:dt}},"keyword keyword-at-rule keyword-at-rule-font-face":{pattern:/(@font-face)(\s*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}"},"keyword keyword-at-rule keyword-at-rule-return":{pattern:/(@return)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{3:()=>tt}}}),wt=new f("scss",{});wt.extend(Be,He,bt),wt.extend({"meta: selector line":{pattern:/(^\s*)((?:[>\+~]|\.|\#|\[|(?:&|&amp;)|%|\*|(?:a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b).*)(,|\{)/,index:e=>((e,t,n,a)=>{let r;for(let s=a;s<n.length;s++){let a=n.slice(s,s+e.length);if(r!==t&&a===e)return s;r=a.slice(-1)}})("{","#",e,0),captures:{2:Ke}}}),wt.extend(it,pt);const ft=new f({variable:{pattern:/(\$[\d\w_\-]+)\b|(\$\{[\d\w_\-]+\})/}}),ht=new f({variable:{pattern:/(\$[\w_\-]+)\b/}}),yt=new f("shell",{comment:{pattern:/#[^\n]*(?=\n|$)/},string:{pattern:/(?:'[^']*'|"[^"]*")/,before:(e,t)=>{e[0]=ft.parse(e[0],t)}},function:{pattern:/(\w[\w\d_\-]+)(?=\()/},"meta: function definition":{pattern:/\b(function)(\s+)([a-zA-Z_$-]\w*)(\s*)(?={)/,replacement:'<span class="keyword keyword-function">#{1}</span>#{2}<span class="entity">#{3}</span>#{4}'},"shell-command shell-command-backticks":{pattern:/(`)([^`]*)(`)/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=ht.parse(e[2],t)}},"shell-command":{pattern:/(\$\()(.*?)(\))/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=ht.parse(e[2],t)}},"support support-builtin":{pattern:/\b(?:sudo|chmod|cd|mkdir|ls|cat|echo|touch|mv|cp|rm|ln|sed|awk|tr|xargs|yes|pbcopy|pbpaste|trap)\b/},"support support-other":{pattern:/\b(?:ruby|gem|rake|python|pip|easy_install|node|npm|php|perl|bash|sh|zsh|gcc|go|mate|subl|atom|nano|pico)(?=\s)/},"meta: handle ip address":{pattern:/\b([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\b/,replacement:"#{1}.#{2}.#{3}.#{4}",before:(e,t)=>{for(let t=1;t<=4;t++)e[t]=c(e[t],"number")}},number:{pattern:/\b(?:[0-9]+(\.[0-9]+)?)\b/},constant:{pattern:/\b(?:false|true|SIGTERM|SIGINT|SIGKILL)\b/},"constant constant-home":{pattern:/(^|\s*|\n)~(?=\b|\/)/},keyword:{pattern:/\b(?:if|fi|case|esac|for|in|do|else|then|while|exit|done|shift)\b/},operator:{pattern:/>|&gt;|&amp;&amp;|&amp;|&&|&/},variable:{pattern:/(\$[\w_\-]+)\b/},"meta: subshell with $() notation":{pattern:/\b(\$\()(.*?)(\))/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=yt.parse(e[2],t)}},"variable-assignment":{pattern:/([A-Za-z_][A-Za-z0-9_]*)(=)/,replacement:"<span class='variable'>#{1}</span><span class='operator'>#{2}</span>"},"variable variable-in-braces":{pattern:/\$\{.+?}(?=\n|\b)/}},{alias:["bash"]});function xt(e,t,n){let a=f.find(t);return a?a.parse(e,n):e}onmessage=function(e){let{type:t}=e.data;switch(t){case"parse":{let{language:t,text:n,id:a}=e.data,r=xt(n,t,new b({highlighter:{parse:xt}}));postMessage({id:a,language:t,source:r});break}}}}));
