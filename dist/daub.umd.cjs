!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).daub={})}(this,(function(e){"use strict";function t(e){return null==e?"":String(e)}function n(e){let t=e.toString();return t=t.replace(/^\//,""),t=t.replace(/\/[mgiy]*$/,""),t}function a(e){return String(e).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function r(e,r,i){let p="";if("function"!=typeof i){let e=new s(i);i=t=>e.evaluate(t)}if(r.flags&&r.flags.indexOf("g")>-1?r=function(e){let t=e.flags.replace("g","");return new RegExp(n(e),t)}(r):"string"==typeof r&&(r=a(r)),!r)return(i=i(""))+e.split("").join(i)+i;for(;e.length>0;){let n=e.length,a=e.match(r);if(a){let r,s=i(a,e);if(Array.isArray(s)&&([s,r]=s),p+=e.slice(0,a.index),p+=t(s),(e=void 0!==r?e.slice(a.index+r):e.slice(a.index+a[0].length)).length===n)throw new Error("Infinite loop detected; none of the string was consumed.")}else p+=e,e=""}return p}class s{constructor(e){this.template=String(e),this.pattern=s.DEFAULT_PATTERN}evaluate(e){return r(this.template,this.pattern,(n=>{if(null==e)return"";let a=n[1]||"";if("\\"==a)return n[2];let r=e,s=n[3],i=/^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;if(null==(n=i.exec(s)))return a;for(;null!=n;){if(r=r["["===n[1].charAt(0)?n[2].replace(/\\]/,"]"):n[1]],null==r||""===n[3])break;s=s.substring("["===n[3]?n[1].length:n[0].length),n=i.exec(s)}return a+t(r)}))}}function i(e,t){return 0!==t&&"\\"===e.charAt(t-1)}function p(e){let t=-1;do{t=e.indexOf("#",t+1)}while(t>-1&&i(e,t));return t>-1&&(e=e.substring(0,t)),e=e.trim()}function o(){return"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope}function l(e){return"string"==typeof e}function c(e){return Array.isArray(e)?e:[e]}function u(e,t,n,a={}){let r;a=Object.assign({startIndex:0,startDepth:0,considerEscapes:!0},a);let{startIndex:s,startDepth:i,considerEscapes:p}=a,o=t.length,l=n.length,c=e.length;for(let a=s;a<c;a++){a>0&&(r=e.slice(a-1,a));let s=!!p&&"\\"===r,c=e.slice(a,a+o);if(e.slice(a,a+l)!==n||s||i++,c===t&&!s&&(i--,0===i))return a}return-1}function d(e){return e=(e=e.replace(/^[\s\t]*/gm,"")).replace(/\n/g,"")}function m(e,t){return e?'<span class="'.concat(t,'">').concat(e,"</span>"):""}function g(e,t,n){let a,r;a=performance.now(),performance.mark&&performance.mark("daub-lexer-before");let s=t.run(e,n);if(r=performance.now(),performance.mark&&(performance.mark("daub-lexer-after"),performance.measure("daub-lexer-before","daub-lexer-after")),!o()){let e=new CustomEvent("daub-lexer-time",{bubbles:!0,detail:r-a});document.dispatchEvent(e)}return s.lengthConsumed-1}function h(e,t,n){let a,r;a=performance.now(),performance.mark&&performance.mark("daub-lexer-before");let s=t.run(e,n,{highlight:!0});if(r=performance.now(),performance.mark&&(performance.mark("daub-lexer-after"),performance.measure("daub-lexer-before","daub-lexer-after")),!o()){let e=new CustomEvent("daub-lexer-time",{bubbles:!0,detail:r-a});document.dispatchEvent(e)}let i=f(s).map((e=>{let t;if(l(e))return e;if(e.open)t=l(e.open)?'<span class="'.concat(e.open,'">'):"";else if(e.close)t=l(e.close)?"</span>":"";else{let n=e.scopes||e.name;t=n?'<span class="'.concat(n,'">').concat(e.content,"</span>"):e.content}return t})).join("");return{index:s.lengthConsumed-1,highlighted:i}}function f(e){let t=[];if(l(e))return[e];if(e.content)if(l(e.content))t.push({name:e.name,scopes:e.scopes,content:e.content});else{e.scopes&&t.push({open:e.scopes});for(let n of c(e.content))t.push(...f(n));e.scopes&&t.push({close:e.scopes})}return t}function b(e){let t=[];for(let n of e)if(l(n))t.push(n);else if(n.content){let e=b(c(n.content));t.push(...e)}return t.join("")}s.DEFAULT_PATTERN=/(^|.|\r|\n)(#\{(.*?)\})/,s.interpolate=function(e,t){return new s(e).evaluate(t)};var w=Object.freeze({__proto__:null,VerboseRegExp:function(e){let t=e.raw[0].split(/\n/).map(p).join("").replace(/\s/g,"");return t=t.replace(/(\\)(\\)(\d+)/g,((e,t,n,a)=>"".concat(n).concat(a))),new RegExp(t)},balance:u,balanceAndHighlightByLexer:h,balanceByLexer:g,compact:d,escapeRegExp:a,gsub:r,regExpToString:n,serializeLexerFragment:b,wrap:m});class y{constructor(e={}){e.highlighter&&(this.highlighter=e.highlighter),this.storage=new Map}set(e,t){this.storage.set(e,t)}get(e,t){return this.storage.has(e)?this.storage.get(e):(this.storage.set(e,t),t)}}function x(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?x(Object(n),!0).forEach((function(t){v(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):x(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function v(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class _ extends Error{constructor(e){super(e),this.name="ParseError"}}class A{constructor(e,t,n={}){"object"!=typeof e||t?(this.name=e,this.names=[e,...n.alias||[]],this._classNamePattern=new RegExp("\\b(?:"+this.names.join("|")+")\\b")):(this.name=null,n=t||n,t=e),this.options=n,this.rules=[],this._originalRules=t,this.extend(t),this.name&&this.names.forEach((e=>{A.register(e,this)}))}_toObject(){return k({},this._originalRules)}parse(e,t=null){let n=this.pattern;if(n.lastIndex=0,!n.test(e))return e;let a=r(e,n,((e,a)=>{let r,s,i,p=0,o=1;for(;r=this.rules[p++];){if(!e[o]){o+=r.length;continue}if(r.index&&(i=r.index(e[0],t),i<=0&&(i=void 0),void 0!==i&&(s=i+1,a=a.slice(0,e.index+s),!(e=n.exec(a))||!e[o]))){let t=new _('Bad "index" callback; requested substring did not match original rule.');throw Object.assign(t,{rule:r,source:a,match:e,index:i}),t}let p=[];for(let t=0;t<=r.length;t++)p.push(e[o+t]);if(p.name=r.name,r.captures)for(let e=0;e<p.length;e++){if(!(e in r.captures))continue;let n="function"==typeof(l=r.captures[e])?l():l;"string"==typeof n?p[e]=m(p[e],n):n instanceof A&&p[e]&&(p[e]=n.parse(p[e],t))}if(r.before){let e=r.before(p,t);void 0!==e&&(p=e)}let c=r.replacement;p.name||(p.name=r.name),p.index=e.index;let u=c.evaluate(p);if(r.after){let e=r.after(u,t);void 0!==e&&(u=e)}return void 0!==i?[u,s]:u}var l;return""}));return a}_makeRules(e,t=0){let n=[];for(let a in e){let r=new z(a,e[a],t);n.push(r),t+=r.length}return n}match(e){return this._classNamePattern.test(e)}extend(...e){let t;if(1!==e.length)return e.forEach((e=>this.extend(e))),this;if(t=e[0],t instanceof A&&(t=t.toObject()),!t)throw new Error("Nonexistent grammar!");let n=0;this.rules.length&&(n=this.rules.map((e=>e.length)).reduce(((e,t)=>e+t)));let a=t,r=this._makeRules(a,n);return this.rules.push(...r),this.pattern=new RegExp(this.rules.map((e=>e.pattern)).join("|"),this.options.ignoreCase?"mi":"m"),this}toObject(){let e={};return this.rules.forEach((t=>{e[t.name]=t.toObject()})),e}}const $={};A.register=(e,t)=>{$[e]=t},A.find=e=>$[e]||null;class z{constructor(e,t,a){this.name=e;let r=t.replacement;r?this.replacement=r instanceof s?r:new s(r):t.captures?this.replacement=null:this.replacement=z.DEFAULT_TEMPLATE,this.debug=t.debug,this.before=t.before,this.after=t.after,this.index=t.index,this.captures=t.captures;let i=t.pattern,p=t.pattern;"string"!=typeof p&&(p=n(p)),p=p.replace(/\\(\d+)/g,((e,t)=>{let n=Number(t);return"\\".concat(a+n+1)}));let o=(p.match(/\(/g)||"").length,l=(p.match(/\(\?[:!=]/g)||"").length+(p.match(/\\\(/g)||"").length-(p.match(/\\\(\?[:!=]/g)||"").length;this.length=o+1-l,this.pattern="(".concat(p,")"),this.originalPattern=i,this.replacement||(this.replacement=z.makeReplacement(this.length,t.wrapReplacement))}toObject(){return{pattern:this.originalPattern,replacement:this.replacement,before:this.before,after:this.after,index:this.index,captures:this.captures}}}z.DEFAULT_TEMPLATE=new s('<span class="#{name}">#{0}</span>'),z.makeReplacement=(e,t)=>{let n=[];for(let t=1;t<e;t++)n.push(t);let a=n.join("}#{");a="#{".concat(a,"}");let r=t?'<span class="#{name}">'.concat(a,"</span>"):a;return new s(r)};const Z=()=>{};class j{constructor(){this.elements=[]}_fire(e,t,n={},a={}){n.highlighter=this;let r=new CustomEvent("daub-".concat(e),k({bubbles:!0,cancelable:!0},a,{detail:n}));return t.dispatchEvent(r),r}_updateElement(e,t,n){e.ownerDocument;let a=document.createRange().createContextualFragment(t),r={element:e,language:n,fragment:a},s=this._fire("will-highlight",e,r);s.defaultPrevented||(s.detail.fragment&&(a=s.detail.fragment),e.innerHTML="",e.appendChild(a))}addElement(e){this.elements.indexOf(e)>-1||this.elements.push(e)}}class E extends j{constructor(e,t={}){if(super(),this.worker=e,!(this.worker instanceof Worker))throw new TypeError('Invalid "worker" option.');this._setupWorker(),this.uid=0,this._callbacks={},this.options=k({},E.DEFAULT_OPTIONS,{},t)}_getLanguage(e){return e.getAttribute("data-language")||e.className}_getSelector(){let e=this.options.selector;return"string"==typeof e&&(e=[e]),e.map((e=>"".concat(e,":not([data-daub-highlighted])"))).join(", ")}_scan(e,t=Z){let n=this._getSelector(),a=Array.from(e.querySelectorAll(n));if(!a||!a.length)return void t(0);let r=a.length,s=0;a.forEach((e=>{let n=this.uid;e.setAttribute("data-daub-uid",this.uid++);let i=e.innerHTML,p=this._getLanguage(e);this.parse(i,p,n,((e,n)=>{s++,s===r&&t&&t(a),this._updateElement(n,e,p),n.setAttribute("data-daub-highlighted","true"),this._fire("highlighted",n,{element:n,language:p},{cancelable:!1})}))}))}_handleMessage(e){let t,{id:n,language:a,source:r}=e.data;for(let e of this.elements)if(t=e.querySelector('[data-daub-uid="'.concat(n,'"]')),t)break;let s=this._callbacks[n];delete this._callbacks[n],t&&s&&s(r,t)}_setupWorker(){this.worker.onmessage=e=>this._handleMessage(e)}parse(e,t=null,n,a){if(!t)throw new Error("Must specify a language!");this._callbacks[n]=a,this.worker.postMessage({type:"parse",text:e,language:t,id:n})}highlight(e=Z){let t=this.elements.length,n=0,a=[],r=(r=[])=>{a.push(...r),n++,n===t&&e(a)};this.elements.forEach((e=>this._scan(e,r)))}}E.DEFAULT_OPTIONS={selector:["code[data-language]","code[class]"]};class S extends j{constructor(e={}){super(),this.grammars=[],this._grammarTable={},this.options=k({},S.DEFAULT_OPTIONS,{},e)}_selectorsForGrammar(e){return e.names.map((e=>{let t=this.options.customSelector(e,this.options);return"string"==typeof t&&(t=[t]),t.map((e=>"".concat(e,":not([data-daub-highlighted])"))).join(", ")})).join(", ")}_scan(e){this.grammars.forEach((t=>{let n=this._selectorsForGrammar(t),a=e.querySelectorAll(n);a=Array.from(a),a&&a.length&&a.forEach((e=>{if(e.hasAttribute("data-daub-highlighted"))return;let n=new y({highlighter:this}),a=e.innerHTML;t.options.encode&&(a=a.replace(/</g,"&lt;"));let r=this.parse(a,t,n);this._updateElement(e,r,t),e.setAttribute("data-daub-highlighted","true");let s={element:e,grammar:t};this._fire("highlighted",e,s,{cancelable:!1})}))}))}highlight(){this.elements.forEach((e=>this._scan(e)))}_fire(e,t,n,a={}){Object.assign(n,{highlighter:this});let r=Object.assign({bubbles:!0,cancelable:!0},a,{detail:n}),s=new CustomEvent("daub-".concat(e),r);return t.dispatchEvent(s),s}addElement(e){this.elements.indexOf(e)>-1||this.elements.push(e)}addGrammar(e){if("string"==typeof e&&(e=A.find(e)),null===e||!(e instanceof A))throw new TypeError('Invalid "grammar" argument.');if(!e.name)throw new Error("Can't register a grammar without a name.'");this.grammars.indexOf(e)>-1||(this.grammars.push(e),e.names.forEach((t=>this._grammarTable[t]=e)))}parse(e,t=null,n=null){if("string"==typeof t){if(!(t=this._grammarTable[t]))return e}else if(!t)throw new Error("Must specify a grammar!");return n||(n=new y({highlighter:this})),t.parse(e,n)}}function O(e){return"function"==typeof e?e():e}function R(e,t){let n=e.final;if("boolean"==typeof n)return n;if("function"==typeof n)return n(t);if(n)throw new TypeError("Invalid value for rule.final!");return!1}S.DEFAULT_OPTIONS={classPrefix:"",customSelector:(e,t)=>["code.".concat(t.classPrefix).concat(e),'code[data-language="'.concat(e,'"]')]};class q extends Error{constructor(e){super(e),this.name="LexerError"}}class T{constructor(e,t,n,a,r={}){this.name=e,this.content=t,this.index=a+n,this.scopes=r.scopes}}class I{constructor(e,t="",n={}){this.rules=e,this.name=t,this.scopes=n.scopes,this.silent=!!n.silent,this.highlight=n.highlight}addRules(e){this.rules.push(...e)}[Symbol.iterator](){let e=[];for(let t of this.rules)if(t.include){let n=O(t.include);e.push([...n])}else e.push(t);return e.values()}run(e,t=null,{startIndex:n=0,scopes:a=null,highlight:r=!1}={}){let s=[];t||(t=new y);let i=null,p=n;for(;e;){let n,a,r;for(let s of this){if(r=s.pattern.exec(e),r&&s.test){s.test(r,e,t,s.pattern)||(r=null)}if(r){if(0===r.index){a=r,n=s;break}(!a||r.index<a.index)&&(a=r,n=s)}}if(!a)break;let o=a.index,l=a.index+a[0].length;if(a.index>0){let t=e.slice(0,a.index);s.push(t),p+=t.length,o=0}e=e.slice(l);let c=R(n,t),u=c&&n.skipSubRulesIfFinal;if(n.trim){if(n.raw)throw new q('Options "trim" and "raw" cannot coexist on a rule!');let e=a[0],t=/^[\n\s\t]+/.exec(e);t&&(s.push(t[0]),a[0]=a[0].slice(t[0].length),p+=t[0].length)}if(n.raw)s.push(a[0]),p+=a[0].length;else if(!n.inside&&!n.after||u){let e=new T(n.name,a[0],o,p,{scopes:n.scopes||n.name});s.push(e),p+=a[0].length}else{let r,i,l;if(n.inside?(l="inside",r=n.inside.name,i=O(n.inside.lexer)):(l="after",r=n.after.name,i=O(n.after.lexer)),!(i&&i instanceof I))throw new q("Invalid lexer!");let c=new T(n.name,a[0],o,p,{scopes:n.scopes||n.name}),u=p+a[0].length-o,d=[];"inside"===l?d.push(c):s.push(c);let m=i.run(e,t,{startIndex:u});d.push(...m.tokens);let g=new T(r,d,o,p,{scopes:m.scopes});s.push(g),p=m.lengthConsumed,e=m.text}if(c)break;if(e===i)break;i=e}return this.highlight&&this.highlight&&(s=this.highlight(s,t)),{name:this.name,scopes:this.scopes,content:s,tokens:s,text:e,lengthConsumed:p}}}let P=new A({"meta: parameter":{pattern:/(?:\b|^)((?:(?:[A-Za-z_$][\w\d]*)\s)*)(\s*)([a-zA-Z_$:][\w\d]*)(?=,|$)/,captures:{1:()=>D,3:"variable variable-parameter"}}}),L=new A({escape:{pattern:/\\./}});const N=new A({"meta: function":{pattern:/([A-Za-z_$]\w*)(\s+)([a-zA-Z_$:]\w*)(\s*)(\()(.*)(\))(\s*)(?={)/,index(e){let t=u(e,")","(",{startIndex:e.indexOf("(")});return e.indexOf("{",t)-1},captures:{1:"storage storage-type storage-return-type",3:"entity",6:()=>P}},"meta: bare declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(?=;)/,captures:{1:"storage storage-type",3:"variable"}},"meta: declaration with assignment":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(=)/,captures:{1:"storage storage-type",3:"variable",5:"operator"}},"meta: array declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\[)(\d+)(\])/,captures:{1:"storage storage-type",3:"variable",4:"punctuation",5:"number",6:"punctuation"}},"meta: declaration with parens":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(\()([\s\S]*)(\))(;)/,index(e){let t=u(e,")","(")+1;return e.indexOf(";",t)},captures:{1:"storage storage-type",3:"variable",5:"punctuation",6:()=>C,7:"punctuation"}},"meta: class declaration":{pattern:/\b(class|enum)(\s+)([A-Za-z][A-Za-z0-9:_$]*)(\s*)({)/,captures:{1:"storage storage-type",3:"entity entity-class"}}}),C=new A({constant:{pattern:/\b[A-Z_]+\b/},lambda:{pattern:/(\[\])(\s*)(\()([\s\S]*)(\))(\s*)({)([\s\S]*)(})/,index:e=>u(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{1:"punctuation",3:"punctuation",4:()=>P,5:"punctuation",7:"punctuation",8:()=>H,9:"punctuation"}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\')*)(')/,wrapReplacement:!0,captures:{2:()=>L}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\")*)(")/,wrapReplacement:!0,captures:{2:()=>L}},number:{pattern:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i}}),F=new A({comment:{pattern:/(\/\/[^\n]*(?=\n|$))|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/}}),D=new A({"storage storage-type":{pattern:/\b(?:u?int(?:8|16|36|64)_t|int|long|float|double|char(?:16|32)_t|char|class|bool|wchar_t|volatile|virtual|extern|mutable|const|unsigned|signed|static|struct|template|private|protected|public|mutable|volatile|namespace|struct|void|short|enum)/}}),M=new A({}).extend(F,C),G=new A({"macro macro-define":{pattern:/^(\#define)(\s+)(\w+)(.*?)$/,replacement:d('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="entity entity-macro">#{3}</span>\n      #{4}\n    '),captures:{1:"keyword keyword-macro",3:"entity entity-macro",4:()=>M}},"macro macro-include":{pattern:/^(\#include)(\s+)("|<|&lt;)(.*?)("|>|&gt;)(?=\n|$)/,replacement:d('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="string string-include">\n        <span class="punctuation">#{3}</span>\n        #{4}\n        <span class="punctuation">#{5}</span>\n      </span>\n    ')},"macro macro-with-one-argument":{pattern:/(\#(?:ifdef|ifndef|undef|if))(\s+)(\w+)/,captures:{1:"keyword keyword-macro",3:"entity entity-macro"}},"macro macro-error":{pattern:/(#error)(\s*)(")(.*)(")/,replacement:d('\n      <span class="keyword keyword-macro">#{1}</span>\n      #{2}\n      <span class="string string-quoted">#{3}#{4}#{5}</span>\n    ')},"keyword keyword-macro":{pattern:/#(endif|else)/}}),H=new A("arduino",{"keyword keyword-control":{pattern:/\b(?:alignas|alignof|asm|auto|break|case|catch|compl|constexpr|const_cast|continue|decltype|default|delete|do|dynamic_cast|else|explicit|export|for|friend|goto|if|inline|new|noexcept|nullptr|operator|register|reinterpret_cast|return|sizeof|static_assert|static_cast|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|using|while)\b/}}).extend(F,N);H.extend(G,C,D,{operator:{pattern:/--?|\+\+?|!=?|(?:<|&lt;){1,2}=?|(&gt;|>){1,2}=?|-(?:>|&gt;)|:{1,2}|={1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/}});const U=new I([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string",{scopes:"string"}),B=new I([{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:U}}],"attribute-value"),W=new I([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:B}}],"attribute-separator"),X=new I([{name:"tag tag-html",pattern:/^[a-zA-Z][a-zA-Z-:]*(?=\s|>|&gt;)/},{name:"attribute-name",pattern:/^\s*(?:\/)?[a-zA-Z][a-zA-Z-:]*(?=\=)/,after:{name:"attribute-separator",lexer:W}},{name:"punctuation",pattern:/\/(?:>|&gt;)/,final:!0},{name:"punctuation",pattern:/(>|&gt;)/,final:!0}],"tag"),Q=new I([{name:"punctuation",pattern:/^(?:<|&lt;)/,after:{name:"tag",lexer:X}}],"tag-start",{scopes:"element element-opening"}),V=new A({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z][a-zA-Z-:]*)(=)/,captures:{1:"attribute-name",2:"punctuation"}}}),J=new A({"constant constant-html-entity constant-html-entity-named":{pattern:/(&amp;)[a-z]+;/},"constant constant-html-entity constant-html-entity-numeric":{pattern:/(&amp;)\#([0-9]+|[xX][0-9a-fA-F]+);/}}),K=new A("html",{"embedded embedded-javascript":{pattern:/(&lt;|<)(script|SCRIPT)(\s+.*?)?(&gt;|>)([\s\S]*?)((?:&lt;|<)\/)(script|SCRIPT)(&gt;|>)/,replacement:d("\n      <span class='element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n        #{5}\n      <span class='element element-closing'>\n        <span class='punctuation'>#{6}</span>\n        <span class='tag'>#{7}</span>\n        <span class='punctuation'>#{8}</span>\n      </span>\n    "),captures:{3:V},before:(e,t)=>{e[5]=t.highlighter.parse(e[5],"javascript",t)}},"element element-opening":{pattern:/(<|&lt;)([a-zA-Z][a-zA-Z-:]*)(?:(\s+)([\s\S]*))?(.)(&gt;|>)/,replacement:d("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag tag-html'>#{2}</span>\n        #{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index(e,t){let{index:n,highlighted:a}=h(e,Q,t);return t.set("lexer-highlighted",a),n},after(e,t){let n=t.get("lexer-highlighted");return t.set("lexer-highlighted",!1),n||e}},"element element-closing":{pattern:/((?:<|&lt;)\/)([a-zA-Z:\-]+)(>|&gt;)/,captures:{1:"punctuation",2:"tag tag-html",3:"punctuation"},wrapReplacement:!0},"element element-doctype":{pattern:/((?:<|&lt;)!)(DOCTYPE)(\s+)(html)([\s\S]*?)(>|&gt;)/,captures:{1:"punctuation",2:"keyword special",4:"keyword special",5:V,6:"punctuation"},wrapReplacement:!0},comment:{pattern:/(?:<|&lt;)!\s*(--([^-]|[\r\n]|-[^-])*--\s*)(?:>|&gt;)/}},{encode:!0});K.extend(J);const Y=new I([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string",{scopes:"string"}),ee=new I([{name:"punctuation",pattern:/\{/,inside:{lexer:()=>ee}},{name:"punctuation",pattern:/\}/,final:!0}],"balance-braces"),te=new I([{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"punctuation interpolation-end",pattern:/\}/,final:!0}],"template-string-interpolation"),ne=new I([{name:"interpolation-start",pattern:/(\$\{)/,inside:{name:"interpolation",lexer:te}},{name:"exclude escaped backtick",pattern:/\\\x60/,raw:!0},{name:"string-end",pattern:/\x60/,final:!0}],"template-string"),ae=new I([{name:"punctuation interpolation-begin",pattern:/\{/,inside:{lexer:ee}},{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:Y}},{name:"template-string-begin",pattern:/\x60/,inside:{name:"template-string",lexer:ne}},{name:"punctuation interpolation-end",pattern:/\}/,final:!0}],"jsx-interpolation",{highlight:(e,t)=>{let n=e.pop(),a=b(e);return[Le.parse(a,t),n]},scopes:"embedded jsx-interpolation"}),re=new I([{name:"punctuation interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:ae}}],"before-jsx-interpolation"),se=new I([{name:"punctuation interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:ae},final:!0},{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:Y}}],"attribute-value"),ie=new I([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:se}}],"attribute-separator"),pe=new I([{name:"tag HTML",scopes:"tag tag-html",pattern:/^[a-z]+(?=&gt;|>)/},{name:"tag JSX",scopes:"tag tag-jsx",pattern:/^[A-Z][A-Za-z0-9_$\.]*(?=&gt;|>)/},{name:"punctuation",pattern:/^\s*(?:>|&gt;)/,test:(e,t,n)=>{let a=n.get("jsx-tag-depth");if(a<1)throw new Error("Depth error!");return a--,n.set("jsx-tag-depth",a),e},trim:!0,final:!0}],"jsx-closing-tag",{scopes:"jsx-element element element-closing"}),oe=new I([{name:"punctuation interpolation-begin",pattern:/^\s*\{/,inside:{name:"interpolation",lexer:ae},trim:!0},{name:"attribute-name",pattern:/^\s*[a-zA-Z][a-zA-Z0-9_$]+(?=\=)/,after:{name:"attribute-separator",lexer:ie},trim:!0},{name:"punctuation punctuation-self-closing",pattern:/^\s*\/(?:>|&gt;)/,test:(e,t,n)=>(n.set("is-opening-tag",null),e),trim:!0,final:e=>e.get("is-root")},{name:"punctuation",pattern:/^\s*(>|&gt;)/,test:(e,t,n)=>{let a=n.get("is-opening-tag"),r=n.get("jsx-tag-depth");return r+=a?1:-1,0!==r&&(n.set("jsx-tag-depth",r),n.set("is-opening-tag",null),e)},trim:!0,final:e=>{let t=e.get("jsx-tag-depth");return e.get("only-opening-tag")||0===t},skipSubRulesIfFinal:!0,after:{name:"jsx-contents",lexer:()=>le}}],"inside-tag"),le=new I([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,trim:!0,after:{name:"tag",lexer:()=>ce}},{name:"punctuation",pattern:/(?:<|&lt;)\/(?=[A-Za-z])/,inside:{name:"element jsx-element",lexer:pe},final:!0},{name:"punctuation interpolation-begin",pattern:/\{/,inside:{name:"interpolation",lexer:ae}}],"within-tag"),ce=new I([{name:"tag tag-html",pattern:/^[a-z\-]+(?=\s|(?:>|&gt;))/,test:(e,t,n)=>(n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e),trim:!0,after:{name:"jsx-tag-contents",lexer:oe},final:e=>e.get("only-opening-tag")},{name:"tag tag-jsx",pattern:/^[A-Z][\w\d$\.]*(?=\s|(?:>|&gt;))/,test:(e,t,n)=>(n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e),after:{name:"jsx-tag-contents",lexer:oe}}],"tag-name"),ue=new I([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("only-opening-tag",!0),e),trim:!0,after:{name:"tag",lexer:ce,silent:!0},final:!0}],"tag-open-start"),de=new I([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("is-root",!0),e),trim:!0,after:{name:"tag",lexer:ce,silent:!0}}],"tag-root",{scopes:"jsx-element element element-opening"});let me=new A({escape:{pattern:/\\./}}),ge=new A({escape:{pattern:/\\./},"exclude from group begin":{pattern:/(\\\()/,replacement:"#{1}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),he=new A({interpolation:{pattern:/(\$\{)(.*?)(\})/,captures:{1:"punctuation interpolation-start",2:()=>Le,3:"punctuation interpolation-end"},wrapReplacement:!0}}).extend(me);const fe=new A({"meta: parameter with default":{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*=\s*)(.*?)(?=,|\)|\n|$)/,captures:{1:"variable parameter",2:"ror",3:()=>Ze}},"keyword operator":{pattern:/\.{3}/},operator:{pattern:/=/},"variable variable-parameter":{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/}});let be=new A({"string string-template":{pattern:/(`)((?:[^`\\]|\\\\|\\.)*)(`)/,captures:{1:"punctuation string-start",2:he,3:"punctuation string-end"},wrapReplacement:!0},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\.)*)(')/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",captures:{2:me}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\.)*)(")/,captures:{2:me},wrapReplacement:!0}}),we=new A({"embedded jsx-interpolation":{pattern:/(\{)([\s\S]*)(\})/,index:e=>g(e,re),captures:{1:"punctuation embedded-start",2:()=>Le,3:"punctuation embedded-end"},wrapReplacement:!0}}),ye=new A({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z-:]+)(=)/,captures:{1:"attribute-name",2:"punctuation"},wrapReplacement:!0}}).extend(we),xe=new A({});xe.extend(ye),xe.extend(we),xe.extend({"punctuation punctuation-tag-close":{pattern:/>|\/>/}});let ke=new A({jsx:{pattern:/(<|&lt;)([a-zA-Z_$][a-zA-Z0-9_$\.]*\s*)([\s\S]*)(&gt;|>)/,index:(e,t)=>g(e,de,t),captures:{0:()=>Ae},replacement:"<span class='jsx'>#{0}</span>",after:(e,t)=>t.get("lexer-highlighted")||e}});function ve(e){return e.match(/^[A-Z]/)?m(e,"tag tag-jsx"):m(e,"tag tag-html")}let _e=new A({"meta: opening tag without attributes":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(&gt;|>)/,replacement:d("\n      <span class='jsx-element element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        #{2}\n        <span class='punctuation'>#{3}</span>\n      </span>\n    "),before(e,t){e[2]=ve(e[2])}},"tag tag-open":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(\s+)([\s\S]*)(.)(&gt;|>)/,replacement:d("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        #{2}#{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index:e=>g(e,ue),before(e,t){e.name="jsx-element element element-opening",e[2]=ve(e[2]),e[5]&&("/"===e[5]?(e.name=e.name.replace("element-opening","element-self"),e[5]=m(e[5],"punctuation")):(e[4]+=e[5],e[5]="")),e[4]=ye.parse(e[4],t)}},"tag tag-close":{pattern:/((?:<|&lt;)\/)([\w$][\w\d_$\.]*)(\s*)(&gt;|>)/,replacement:d("\n      <span class='jsx-element element element-closing'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n    ")}}),Ae=new A({}).extend(we,_e),$e=new A({params:{pattern:/(\()([^)]+)(\))/,wrapReplacement:!0,captures:{1:"punctuation",2:fe,3:"punctuation"}},"variable variable-parameter":{pattern:/[\w$][\w\d_$]*/}}),ze=new A({"meta: single-parameter multiline arrow function":{pattern:/([\w$][\w\d$]*)(\s*)(=(?:>|&gt;))/,captures:{1:$e,3:"operator"}},"meta: arrow function with params in parentheses":{pattern:/(\([^)]+\))(\s*)(=(?:>|&gt;))/,captures:{1:$e,3:"operator"}},"single line arrow function":{pattern:/(\(?[^)]\)?|[a-zA-Z_$][a-zA-Z0-9_$]*)(\s*)(=(?:>|&gt;))(\s*)/,captures:{1:$e,3:"operator"}}}),Ze=new A({});Ze.extend({constant:{pattern:/\b(?:arguments|this|false|true|super|null|undefined)\b/},"number number-binary-or-octal":{pattern:/0[bo]\d+/},number:{pattern:/(?:\d*\.?\d+)/}}),Ze.extend(ze),Ze.extend(be),Ze.extend({comment:{pattern:/(\/\/[^\n]*\n)|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/},regexp:{pattern:/(\/)(.*?[^\\])(\/)([mgiy]*)/,captures:{2:ge,4:"keyword regexp-flags"},wrapReplacement:!0}});let je=new A({alias:{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*)(:)(\s*)(?=\w|\{|\[)/,captures:{1:"entity"}},variable:{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/},operator:{pattern:/=/}}),Ee=new A("import specifiers",{ordinary:{pattern:/(^|,)([\s\n]*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import"}},"default as":{pattern:/(^|,)([\s\n]*)(default)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"keyword keyword-default",5:"keyword keyword-as",7:"variable variable-import"}},"foo as bar":{pattern:/(^|,)([\s\n]*)([\w$][\w\d$]*)(\s+)(as)(\s+)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import",5:"keyword keyword-as",7:"variable variable-import"}}}),Se=new A("import specifier",{"implicit default specifier":{pattern:/^(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=,|$)/,captures:{2:"variable variable-import"}},specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:Ee}}}),Oe=new A({"import with destructuring":{pattern:/(^\s*)(import)(\s*)(?=\{)([\s\S]*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:Se,6:"keyword keyword-from",8:be}},"import with source":{pattern:/(^\s*)(import)(\s*)(.*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>Se,6:"keyword keyword-from",8:()=>be}},"import without source":{pattern:/(^\s*)(import)(\s*)(?=\`|'|")(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>be}}}),Re=new A("export specifiers",{ordinary:{pattern:/(^|,)(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-export"}},"as default":{pattern:/(^|,)(\s*)([\w$][\w\d$]*)(\s*)(as)(\s*)(default)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-export",5:"keyword keyword-as",7:"keyword keyword-default"}},"as [identifier]":{pattern:/(^|,)(\s*)([\w$][\w\d$]*)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import",5:"keyword keyword-as",7:"variable variable-export"}}}),qe=new A("export specifier",{specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:Re}}}),Te=new A("exports",{"export with destructuring":{pattern:/(^\s*)(export)(\s*)(?=\{)([\s\S]*?\s*\})/,captures:{2:"keyword keyword-export",4:qe}},"export default with identifier":{pattern:/(^\s*)(export)(\s+)(default)(\s+)([\w$][\w\d$]*)/,captures:{2:"keyword keyword-export",4:"keyword keyword-default",6:"variable variable-export"}},"export by itself or with default":{pattern:/(^\s*)(export)(\s+)(default)?(\s*)(?=let|const|var|function|\[|\{)/,captures:{2:"keyword keyword-export",4:"keyword keyword-default"}}}),Ie=new A({"keyword operator":{pattern:/\|\||&&|&amp;&amp;|!==?|={1,3}|(?:>=|&gt;=)|(?:<=|&lt;=)|\+\+|\+|--|-|\*|[\*\+-\/]=|\.{3}|\b(?:instanceof|in|of)\b|!|void|\.|(?:>|&gt;)|(?:<|&lt;)/},"meta: ternary colon":{pattern:/(\s+)(\?|:)(\s+)/,captures:{2:"keyword operator operator-ternary"}}}),Pe=new A({});Pe.extend(_e),Pe.extend(Ze),Pe.extend(ze),Pe.extend(Ie);let Le=new A("javascript-jsx",{},{alias:["react","javascript","js"]});Le.extend(ke),Le.extend(Oe),Le.extend(Te),Le.extend(Ze),Le.extend({"meta: exclude digits in the middle of identifiers":{pattern:/\$\d/,replacement:"#{0}"},"meta: properties with keyword names":{pattern:/(\.)(for|if|while|switch|catch|return)\b/,replacement:"#{0}"},"meta: functions with keyword names":{pattern:/(\s*)\b(for|if|while|switch|catch)\b/,replacement:"#{1}<span class='keyword'>#{2}</span>"},"meta: new keyword plus identifier":{pattern:/(new)(\s+)((?:[\w$][\w\d$]*\.)*)([\w$][\w\d$]*)(?=\()/,captures:{1:"keyword keyword-new",3:()=>Ie,4:"entity-class"}},"meta: variable declaration":{pattern:/\b(var|let|const)(\s+)([\w$][\w\d$]*?)(\s*)(?=\s|=|;|,)/,captures:{1:"storage",3:"variable"}},"meta: variable assignment":{pattern:/(\s+|,)([A-Za-z_$][\w\d$]*?)(\s*)(?==)(?!=(?:>|&gt;))/,captures:{2:"variable"}},"meta: destructuring assignment":{pattern:/(let|var|const)(\s+)(\{|\[)([\s\S]*)(\}|\])(\s*)(=)/,index:e=>{let t=/(let|var|const|)(\s+)(\{|\[)/.exec(e)[3],n=u(e,{"{":"}","[":"]"}[t],t),a=e.indexOf("=",n);return e.slice(0,a+1),a},captures:{1:"storage",4:je,7:"operator"}},"function function-expression":{pattern:/\b(function)(\s*)([a-zA-Z_$]\w*)?(\s*)(\()(.*?)(\))/,captures:{1:"keyword keyword-function",3:"entity",5:"punctuation",6:fe,7:"punctuation"}},"function function-literal-shorthand-style":{pattern:/(^\s*)(get|set|static)?(\s*)([\w$][\w\d$]*)(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{2:"storage",4:"entity",6:"punctuation",7:fe,8:"punctuation"}},"meta: function shorthand with computed property name":{pattern:/(])(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{3:"punctuation",4:fe,5:"punctuation",7:"punctuation"}},"function function-assigned-to-variable":{pattern:/\b([\w$][\w\d$]*)(\s*)(=)(\s*)(function)(\s*)(\()(.*?)(\))/,captures:{1:"variable",3:"operator",5:"keyword",7:"punctuation",8:fe,9:"punctuation"}},"meta: property then function":{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(:)(\s*)(?=function)/,captures:{1:"entity",2:"punctuation"}},entity:{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(?=:)/},"meta: class definition":{pattern:/(class)(?:(\s+)([A-Z][A-Za-z0-9_]*))?(?:(\s+)(extends)(\s+)([A-Z][A-Za-z0-9_$\.]*))?(\s*)({)/,index:e=>u(e,"}","{",{startIndex:e.indexOf("{")+1}),captures:{1:"storage",3:"entity entity-class",5:"storage",7:"entity entity-class entity-superclass"}},storage:{pattern:/\b(?:var|let|const|class|extends|async|static)\b/},keyword:{pattern:/\b(?:try|catch|finally|if|else|do|while|for|break|continue|case|switch|default|return|yield|throw|await)\b/}}).extend(Ie);const Ne=new A({variable:{pattern:/(\$[\d\w_\-]+)\b/}}),Ce=new A({"meta: unquoted IP address string":{pattern:/(\s|^)(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:\:\d+)?)/,captures:{2:"string string-unquoted string-ip-address"}},"string string-unquoted string-url":{pattern:/\bhttps?:\/\/.*?(?=;|\s|$)/},"meta: unquoted path string":{pattern:/(\s+|^)((?:[A-Za-z0-9_\-]+)?\/(?:\\\s|.)+?(?=\s|$))/,captures:{2:"string string-unquoted string-path"}},"meta: number":{pattern:/(\s|^)(\d[\d\.]*)/,captures:{2:"number number-integer"}},"meta: string":{pattern:/((?:^|[^\\])(?:\\\\)*)("(?:[^"\\]|\\.|\n)*"|'(?:[^'\\]|\\.|\n)*')/,before(e){e[2]=function(e){let t=e.charAt(0),n=Ne.parse(e.slice(1,-1));return d('\n    <span class="string string-quoted">\n      <span class="punctuation">'.concat(t,"</span>\n      ").concat(n,'\n      <span class="punctuation">').concat(t,"</span>\n    </span>\n  "))}(e[2])},replacement:"#{1}#{2}"},variable:{pattern:/\$[A-Za-z_][A-Za-z0-9_]*/},"meta: boolean":{pattern:/(\s)(off|on)(?!\S)/,captures:{2:"constant constant-boolean"}}});const Fe=new A({}).extend(Ce).extend({"entity entity-function-with-block":{pattern:/^(?:server|location|events|http|upstream|types)(?!\S)/},"support support-function":{pattern:/^\S+/}}),De=new A("nginx",{"comment comment-line":{pattern:/(^|[\s{};])#.*$/},"meta: directive":{pattern:/(^|\s)(\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:\#.*(?!.)|(?![\#\s])))*?)(?=\s*[;{])/,captures:{2:Fe}}}),Me=new A({interpolation:{pattern:/\{(\d*)\}/},"escape escape-hex":{pattern:/\\x[0-9a-fA-F]{2}/},"escape escape-octal":{pattern:/\\[0-7]{3}/},escape:{pattern:/\\./}}),Ge=new A({lambda:{pattern:/(lambda)(\s+)(.*?)(:)/,captures:{1:"keyword storage",3:()=>Ue}},"string string-triple-quoted":{pattern:/"""[\s\S]*?"""/,before:(e,t)=>{e[0]=Me.parse(e[0],t)}},"string string-raw string-single-quoted":{pattern:/([urb]+)(')(.*?[^\\]|[^\\]*)(')/,replacement:"<span class='storage string'>#{1}</span><span class='#{name}'>#{2}#{3}#{4}</span>",captures:{3:()=>Me}},"string string-single-quoted":{pattern:/([ub])?(')((?:[^'\\]|\\.)*)(')/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>Me}},"string string-double-quoted":{pattern:/([ub])?(")((?:[^"\\]|\\.)*)(")/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>Me}},constant:{pattern:/\b(self|None|True|False)\b/},"constant constant-assignment":{pattern:/^([A-Z][A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},"constant constant-named":{pattern:/\b([A-Z_]+)(?!\.)\b/},"variable variable-assignment":{pattern:/([a-z_][[A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},number:{pattern:/(\b|-)((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b/},"number number-binary":{pattern:/0b[01]+/},"number number-octal":{pattern:/0o[0-7]+/}}),He=new A({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable variable-parameter",3:"keyword punctuation",4:Ge}}}).extend(Ge),Ue=new A({"meta: parameter":{pattern:/(\s*)(\*\*?)?([A-Za-z0-9_]+)(?=,|$)/,captures:{2:"keyword operator",3:"variable variable-parameter"}}}),Be=new A({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable variable-parameter",3:"keyword punctuation",4:()=>Ge}}}).extend(Ue),We=new A("python",{"storage storage-type support":{pattern:/(int|float|bool|chr|str|bytes|list|dict|set)(?=\()/},"support support-builtin":{pattern:/(repr|round|print|input|len|min|max|sum|sorted|enumerate|zip|all|any|open)(?=\()/},"meta: from/import/as":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(\s+)(as)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword",9:"keyword"}},"meta: from/import":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword"}},"meta: subclass":{pattern:/(class)(\s+)([\w\d_]+)(\()([\w\d_]*)(\))(\s*)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation",5:"entity entity-class entity-superclass",6:"punctuation",8:"punctuation"}},"meta: class":{pattern:/(class)(\s+)([\w\d_]+)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation"}},comment:{pattern:/#[^\n]*(?=\n)/},keyword:{pattern:/\b(?:if|else|elif|print|class|pass|from|import|raise|while|try|finally|except|return|global|nonlocal|for|in|del|with)\b/},"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?]+)(\s*)(\()(.*?)?(\))/,captures:{1:"keyword",3:"entity",5:"punctuation",6:Be,7:"punctuation"}},"meta: method invocation":{pattern:/([A-Za-z0-9_!?]+)(\s*)(\()(\s*)([\s\S]*)(\s*\))/,index:e=>u(e,")","(",e.indexOf("(")),captures:{3:"punctuation",5:()=>He,6:"punctuation"}},"keyword operator operator-logical":{pattern:/\b(and|or|not)\b/},"keyword operator operator-bitwise":{pattern:/(?:&|\||~|\^|>>|<<)/},"keyword operator operator-assignment":{pattern:/=/},"keyword operator operator-comparison":{pattern:/(?:>=|<=|!=|==|>|<)/},"keyword operator operator-arithmetic":{pattern:/(?:\+=|\-=|=|\+|\-|%|\/\/|\/|\*\*|\*)/}});function Xe(e,t){return e.indexOf(t)>-1}function Qe(e,t){let n=u(e.slice(t).join(""),"}","{",{stackDepth:1});if(-1===n)return;let a=0;for(let r=t;r<e.length;r++)if(a+=e[r].length,a>=n)return r}function Ve(e,t,n){let a=[];for(let r=t;r<=n;r++)a.push(e[r]);return a.join(",")}function Je(e,t,n){t||(t=Ke);let a=e.split(/,/),r=[];for(let e,t=0;t<a.length;t++)if(e=a[t],Xe(s=e,"{")&&!Xe(s,"}")){let e=Qe(a,t+1),n=Ve(a,t,e);r.push(n),t=e}else r.push(e);var s;return r.map((e=>t.parse(e,n)))}We.extend(Ge);const Ke=new A({"meta: parameter with default":{pattern:/^(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*)/,captures:{2:"variable variable-parameter",3:"keyword operator",4:()=>et}},"meta: variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable variable-parameter"}}}),Ye=new A({"meta: block variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable variable-parameter"}}}),et=new A({"named constant":{pattern:/\b([A-Z][A-Z0-9_]*)\b/,captures:{1:"constant"}},"string string-single-quoted":{pattern:/(')([^']*?)(')/},"string string-double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:()=>nt}},"string string-double-quoted empty":{pattern:/\"\"/},"string string-percent-q string-percent-q-braces":{pattern:/(%Q\{)([\s\S]*)(\})/,index:e=>u(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>nt}},"string string-percent-q string-percent-q-parens":{pattern:/(%Q\()([\s\S]*)(\))/,index:e=>u(e,")","(",{startIndex:e.indexOf("(")}),wrapReplacement:!0,captures:{2:()=>nt}},"string string-percent-q string-percent-q-brackets":{pattern:/(%Q\[)([\s\S]*)(\])/,index:e=>u(e,"]","[",{startIndex:e.indexOf("[")}),wrapReplacement:!0,captures:{2:()=>nt}},"string embedded string-shell-command":{pattern:/(`)([^`]*?)(`)/,wrapReplacement:!0,captures:{2:()=>nt}},constant:{pattern:/\b(self|true|false|nil(?!\?))\b/},"number binary":{pattern:/\b0b[01](?:_[01]|[01])*\b/},number:{pattern:/\b(\d(?:[_.]\d|\d)*)\b/},"punctuation punctuation-namespace":{pattern:/(::)/},symbol:{pattern:/:[A-Za-z0-9_!?]+/},"symbol single-quoted":{pattern:/:'([^']*?)'/},"symbol double-quoted":{pattern:/(:)(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{3:()=>nt}},regexp:{pattern:/(\/)(.*?)(\/)/,wrapReplacement:!0,captures:{2:()=>tt}},"variable variable-instance":{pattern:/(@)[a-zA-Z_][\w\d]*/},"variable variable-global":{pattern:/(\$)[a-zA-Z_][\w\d]*/},keyword:{pattern:/\b(begin|do|class|def|if|module|yield|then|else|for|until|unless|while|elsif|case|when|break|retry|redo|rescue|return|require|lambda)\b/}}),tt=new A({escape:{pattern:/\\./},"meta: exclude from group begin":{pattern:/\\\(/,replacement:"#{0}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),nt=new A({escape:{pattern:/\\./},interpolation:{pattern:/(#\{)(.*?)(\})/,captures:{1:"punctuation",2:()=>at,3:"punctuation"},wrapReplacement:!0}}),at=new A("ruby",{"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?.]+)(?:\s*(\()(.*?)(\)))?/,captures:{1:"keyword",3:"entity"},before:(e,t)=>{e[5]&&(e[5]=Je(e[5],null,t))}},"block block-braces":{pattern:/(\{)(\s*)(\|)([^|]*?)(\|)/,replacement:d("\n      <b class='#{name}'>\n        <span class='punctuation'>#{1}</span>#{2}\n        <span class='punctuation'>#{3}</span>\n        #{4}\n        <span class='punctuation'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=Je(e[4],Ye,t)}},"block block-do-end":{pattern:/(do)(\s*)(\|)([^|]*?)(\|)/,replacement:d("\n      <b class='#{name}'>\n        <span class='keyword keyword-do'>#{1}</span>#{2}\n        <span class='punctuation'>#{3}</span>\n        #{4}\n        <span class='punctuation'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=Je(e[4],null,t),e[6]=at.parse(e[6],t)}},"meta: class definition with superclass":{pattern:/(class)(\s+)([A-Z][A-Za-z0-9_]*)(\s*(?:<|&lt;)\s*)([A-Z][A-Za-z0-9:_]*)/,replacement:d("\n      <span class='keyword keyword-class'>#{1}</span>#{2}\n      <span class='entity entity-class'>#{3}</span>\n      <span class='punctuation'>#{4}</span>\n      <span class='entity entity-class entity-superclass'>#{5}</span>\n    ")},"meta: class or module definition":{pattern:/(class|module)(\s+)([A-Z][\w\d]*)(\s*)(?=$|\n)/,replacement:d("\n      #{1}#{2}#{3}#{4}\n    "),before(e,t){let n=e[1];e[1]=m(e[1],"keyword keyword-".concat(n)),e[3]=m(e[3],"entity entity-".concat(n))}},"string heredoc-indented":{pattern:/(&lt;&lt;-|<<-)([_\w]+?)\b([\s\S]+?)(\2)/,replacement:d("\n      <span class='#{name}'>\n        <span class='heredoc-begin'>#{1}#{2}</span>\n        #{3}\n        <span class='heredoc-end'>#{4}</span>\n      </span>\n    "),captures:{3:()=>nt}},"keyword operator":{pattern:/(\+|-|\*|\/|>|&gt;|<|&lt;|=>|=&gt;|>>|&gt;&gt;|<<|&lt;&lt;|=~|\|\|=|==|=|\|\||&&|\+=|-=|\*=|\/=)/},"keyword keyword-special":{pattern:/\b(initialize|new|loop|extend|raise|attr|catch|throw|private|protected|public|module_function|attr_(?:reader|writer|accessor))\b/}});at.extend(et),at.extend({comment:{pattern:/#[^\n]+/},"bracket-block-end":{pattern:/\}/,replacement:"#{0}",after(e,t){let n=t.get("bracesStack",[]).pop();if(n)return"".concat(e,"\x3c!-- close ").concat(n," --\x3e</b>")}},"keyword keyword-block-end":{pattern:/\b(end)\b/,after(e,t){let n=t.get("bracesStack",[]).pop();if(n)return"".concat(e,"\x3c!-- close ").concat(n," --\x3e</b>")}}});const rt=new A({"support support-function-call support-function-call-css-builtin":{pattern:/(attr|counter|rgb|rgba|hsl|hsla|calc)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>gt,4:"punctuation"}},"support support-function-call support-function-call-sass":{pattern:/(red|green|blue|mix|hue|saturation|lightness|adjust-hue|lighten|darken|saturate|desaturate|grayscale|complement|invert|alpha|opacity|opacify|transparentize|fade-in|fade-out|selector-(?:nest|replace)|unquote|quote|str-(?:length|insert|index|slice)|to-(?:upper|lower)-case|percentage|round|ceil|floor|abs|min|max|random|(?:feature|variable|global-variable|mixin)-exists|inspect|type-of|unit|unitless|comparable|call|if|unique-id)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>gt,4:"punctuation"}},"support support-function-call support-function-call-url":{pattern:/(url)(\()(.*)(\))/,index:e=>u(e,")","(",{startIndex:e.indexOf("(")}),replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{let n=Zt.parse(e[3],t);/^('|")/.test(e[3])||(n=st.parse(e[3],t),n="<span class='string string-unquoted'>".concat(n,"</span>")),e[3]=n}},"support support-function-call support-function-call-custom":{pattern:/([A-Za-z_-][A-Za-z0-9_-]*)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>gt,4:"punctuation"}}}),st=new A({interpolation:{pattern:/(\#\{)(.*?)(})/,captures:{1:"punctuation interpolation-begin",2:()=>gt,3:"punctuation interpolation-end"},wrapReplacement:!0}});function it(e){return new A({[e]:{pattern:/\$[A-Za-z0-9_-]+/}})}const pt=it("variable"),ot=new A({"variable variable-assignment":{pattern:/(\s*)(\$[A-Za-z][A-Za-z0-9_-]*)\b(\s*)(\:)([\s\S]*?)(;)/,captures:{2:"variable variable-assignment",4:"punctuation",5:()=>gt}}}).extend(pt),lt=new A({"meta: parameter with default":{pattern:/(\$[\w\-][\w\d\-]*)(\s*)(:)(\s*)(.*?)(?=,|\),\n)/,captures:{1:"variable variable-parameter",3:"punctuation",5:()=>gt}}}).extend(it("variable variable-parameter")),ct=new A({"selector selector-class selector-abstract-class":{pattern:/(%)[a-zA-Z0-9_-]+/},"selector selector-element-wildcard":{pattern:/\*/},"selector selector-element":{pattern:/\b(a|abbr|acronym|address|area|article|aside|applet|audio|b|base|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video)\b/},"selector selector-class":{pattern:/\.[a-zA-Z][a-zA-Z0-9_\-]*\b/},"selector selector-id":{pattern:/#[a-zA-Z][a-zA-Z0-9_-]*/},"selector selector-pseudo selector-pseudo-not":{pattern:/(:not\()(.*)(\))/,replacement:d("\n      <span class='#{name}'>\n        #{1}\n        <span class='parameter'>#{2}</span>\n        #{3}\n      </span>\n    "),captures:{2:()=>ct}},"meta: BEM self-reference pattern":{pattern:/(&amp;)((?:__|--)(?:[\w\d\-]+)?)/,captures:{1:"selector selector-self-reference-bem-style selector-element",2:"selector selector-class selector-self-reference-bem-style"}},"selector selector-interpolation embedded":{pattern:/(#\{)(.*)(\})/,index:e=>u(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>gt}},"selector selector-self-reference":{pattern:/(?:&amp;|&)/},"selector selector-pseudo selector-pseudo-with-args":{pattern:/((?:\:+)\b(?:lang|nth-(?:last-)?child|nth-(?:last-)?of-type))(\()(.*)(\))/,wrapReplacement:!0,captures:{3:()=>gt}},"selector selector-pseudo selector-pseudo-without-args":{pattern:/(:{1,2})(link|visited|hover|active|focus|targetdisabled|enabled|checked|indeterminate|root|first-child|last-child|first-of-type|last-of-type|only-child|only-of-type|empty|valid|invalid)/},"selector selector-pseudo selector-pseudo-element":{pattern:/(:{1,2})(-(?:webkit|moz|ms)-)?\b(after|before|first-letter|first-line|selection|any-link|local-link|(?:input-)?placeholder|focus-inner|matches|nth-match|column|nth-column)\b/},"selector selector-attribute":{pattern:/(\[)([A-Za-z_-][A-Za-z0-9_-]*)(?:([~\.$^]?=)((['"])(?:.*?)(?:\5)|[^\s\]]))?(\])/,wrapReplacement:!0,captures:{4:()=>ft}},"selector selector-combinator":{pattern:/(\s*)([>+~])(\s*)/,replacement:"#{1}<span class='#{name}'>#{2}</span>#{3}"}}),ut=new A({"meta: map pair":{pattern:/([a-zA-Z_-][a-zA-Z0-9_-]*)(\s*:\s*)(.*(?:,|\)|$))/,captures:{1:"entity",2:"punctuation",3:()=>gt}}}),dt=new A({"operator operator-logical":{pattern:/\b(and|or|not)\b/}}),mt=new A({"operator operator-arithmetic":{pattern:/\*|\+|\-(?=\s|\(|\d|$)|\//},"operator operator-comparison":{pattern:/!=|==|</}}).extend(dt),gt=new A({"meta: possible map":{pattern:/(\()([\s\S]+)(\))/,replacement:"#{1}#{2}#{3}",before:(e,t)=>{let n=gt;/[A-Za-z_-][A-Za-z0-9_-]*:.*(?:,|\)|$)/.test(e[2])&&(n=ut),e[2]=n.parse(e[2],t)}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},constant:{pattern:/\b(?:null)\b/},"support support-property-value":{pattern:/inherit|initial|unset|none|auto|inline-block|block|inline|absolute|relative|solid|dotted|dashed|nowrap|normal|bold|italic|underline|overline|double|uppercase|lowercase|(?:border|content)-box/},"meta: value with unit":{pattern:/([\+|\-]?(?:\s*)?(?:[0-9]+(?:\.[0-9]+)?|\.[0-9]+))(\s*)((?:ch|cm|deg|dpi|dpcm|dppx|em|ex|grad|in|mm|ms|pc|pt|px|rad|rem|turn|s|vh|vmin|vw)\b|%)/,captures:{1:"number",3:"unit"}}}).extend(mt,pt),ht=new A({number:{pattern:/[\+|\-]?(\s*)?([0-9]+(\.[0-9]+)?|\.[0-9]+)/}}),ft=new A({"string single-quoted":{pattern:/(')([^']*?)(')/,wrapReplacement:!0,captures:{2:st}},"string double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:st}},"string single-quoted string-empty":{pattern:/''/},"string double-quoted string-empty":{pattern:/""/}}),bt=new A({"constant color-hex":{pattern:/#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b/},"constant color-named":{pattern:/\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b/}}),wt=new A({"keyword directive":{pattern:/\s+!(?:default|important|optional)/}});gt.extend(rt,ft,bt,ht,wt,{support:{pattern:/\b([\w-]+)\b/}});const yt=new A({"comment comment-line":{pattern:/(?:\s*)\/\/(?:.*?)(?=\n)/},"comment comment-block":{pattern:/(?:\s*)(\/\*)([\s\S]*)(\*\/)/}}),xt=new A({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(;)/,captures:{1:"property",3:()=>gt}}}),kt=new A({support:{pattern:/\b(?:only|screen)\b/},"meta: property group":{pattern:/(\()(.*)(\))/,replacement:"#{1}#{2}#{3}",captures:{2:()=>zt}}}).extend(dt),vt=new A({}).extend(rt,mt,gt),_t=new A({}).extend(lt,gt,{"string string-unquoted":{pattern:/\b\w+\b/}}),At=new A({"meta: from/to":{pattern:/\b(from|to)\b(\s*)(?={)/,captures:{1:"keyword"}},"meta: percentage":{pattern:/(\d+%)(\s*)(?={)/,captures:{1:()=>gt}}}).extend(xt),$t=new A({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,replacement:'<span class="property">#{1}</span>#{2}#{3}#{4}',captures:{1:"property",2:"punctuation",3:()=>gt}}}).extend(dt),zt=new A({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,captures:{1:"property",3:()=>gt}}}),Zt=new A({}).extend(ft,ot,rt),jt=new A({"meta: at-rule":{pattern:/(@(?:elseif|if|else))(.*)({)/,captures:{1:"keyword keyword-at-rule keyword-at-rule-if",2:vt}},"keyword keyword-at-rule keyword-at-rule-keyframes":{pattern:/(@keyframes)(\s+)([a-z-]+)(\s*)({)([\s\S]*)(})/,index:e=>u(e,"}","{",{startIndex:e.indexOf("{")}),captures:{1:"keyword keyword-at-rule keyword-at-rule-keyframes",3:"entity",6:At}},"keyword keyword-at-rule keyword-at-rule-log-directive":{pattern:/(@(?:error|warn|debug))(\s+|\()(.*)(\)?;)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:ft}},"keyword keyword-at-rule keyword-at-rule-each":{pattern:/(@each)(.*)\b(in)\b(.*)(\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{2:()=>ot,3:"keyword",4:()=>gt}},"keyword keyword-at-rule keyword-at-rule-for":{pattern:/(@for)(.*)\b(from)\b(.*)(through)(.*)({)/,replacement:d("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}#{6}#{7}\n    "),captures:{2:()=>ot,3:"keyword",4:()=>gt,5:"keyword",6:()=>gt}},"keyword keyword-at-rule keyword-at-rule-mixin":{pattern:/(@mixin)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:d("\n      <span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:lt}},"keyword keyword-at-rule keyword-at-rule-function":{pattern:/(@function)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:d("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:lt}},"keyword keyword-at-rule keyword-at-rule-extend":{pattern:/(@extend)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{e[3]=ct.parse(e[3],t),e[3]=e[3].replace(/(class=)(["'])(?:selector)\b/g,"$1$2entity parameter"),/!optional$/.test(e[3])&&(e[3]=e[3].replace(/(!optional)$/,"<span class='keyword keyword-directive'>$1</span>"))}},"keyword keyword-at-rule keyword-at-rule-include":{pattern:/(@include)(\s+)([A-Za-z][A-Za-z0-9\-_]+)(?:(\s*\())?([\s\S]*?)(;|\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"function",5:_t}},"keyword keyword-at-rule keyword-at-rule-media":{pattern:/(@media)(.*)({)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:kt}},"keyword keyword-at-rule keyword-at-rule-import":{pattern:/(@import)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:ft}},"keyword keyword-at-rule keyword-at-rule-content":{pattern:/(@content)(?=;)/},"keyword keyword-at-rule keyword-at-rule-charset":{pattern:/(@charset)(\s+)(.*)(;)(\s*)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:ft}},"keyword keyword-at-rule keyword-at-rule-namespace":{pattern:/(@namespace)(\s+)(?:([a-zA-Z][a-zA-Z0-9]+)(\s+))?([^\s]*)(;)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"selector",5:rt},before:(e,t)=>{e[3]||(e[4]="")}},"keyword keyword-at-rule keyword-at-rule-supports":{pattern:/(@supports)(\s+)(.*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:$t}},"keyword keyword-at-rule keyword-at-rule-font-face":{pattern:/(@font-face)(\s*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}"},"keyword keyword-at-rule keyword-at-rule-return":{pattern:/(@return)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{3:()=>gt}}}),Et=new A("scss",{});Et.extend(rt,ot,jt),Et.extend({"meta: selector line":{pattern:/(^\s*)((?:[>\+~]|\.|\#|\[|(?:&|&amp;)|%|\*|(?:a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b).*)(,|\{)/,index:e=>((e,t,n,a)=>{let r;for(let s=a;s<n.length;s++){let a=n.slice(s,s+e.length);if(r!==t&&a===e)return s;r=a.slice(-1)}})("{","#",e,0),captures:{2:ct}}}),Et.extend(xt,yt);const St=new A({variable:{pattern:/(\$[\d\w_\-]+)\b|(\$\{[\d\w_\-]+\})/}}),Ot=new A({variable:{pattern:/(\$[\w_\-]+)\b/}}),Rt=new A("shell",{comment:{pattern:/#[^\n]*(?=\n|$)/},string:{pattern:/(?:'[^']*'|"[^"]*")/,before:(e,t)=>{e[0]=St.parse(e[0],t)}},function:{pattern:/(\w[\w\d_\-]+)(?=\()/},"meta: function definition":{pattern:/\b(function)(\s+)([a-zA-Z_$-]\w*)(\s*)(?={)/,replacement:'<span class="keyword keyword-function">#{1}</span>#{2}<span class="entity">#{3}</span>#{4}'},"shell-command shell-command-backticks":{pattern:/(`)([^`]*)(`)/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=Ot.parse(e[2],t)}},"shell-command":{pattern:/(\$\()(.*?)(\))/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=Ot.parse(e[2],t)}},"support support-builtin":{pattern:/\b(?:sudo|chmod|cd|mkdir|ls|cat|echo|touch|mv|cp|rm|ln|sed|awk|tr|xargs|yes|pbcopy|pbpaste|trap)\b/},"support support-other":{pattern:/\b(?:ruby|gem|rake|python|pip|easy_install|node|npm|php|perl|bash|sh|zsh|gcc|go|mate|subl|atom|nano|pico)(?=\s)/},"meta: handle ip address":{pattern:/\b([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\b/,replacement:"#{1}.#{2}.#{3}.#{4}",before:(e,t)=>{for(let t=1;t<=4;t++)e[t]=m(e[t],"number")}},number:{pattern:/\b(?:[0-9]+(\.[0-9]+)?)\b/},constant:{pattern:/\b(?:false|true|SIGTERM|SIGINT|SIGKILL)\b/},"constant constant-home":{pattern:/(^|\s*|\n)~(?=\b|\/)/},keyword:{pattern:/\b(?:if|fi|case|esac|for|do|else|then|while|exit|done|shift)\b/},operator:{pattern:/>|&gt;|&amp;&amp;|&amp;|&&|&/},variable:{pattern:/(\$[\w_\-]+)\b/},"meta: subshell with $() notation":{pattern:/\b(\$\()(.*?)(\))/,replacement:'<span class="interpolation"><span class="punctuation">#{1}</span><span class="interpolation-contents">#{2}</span><span class="punctuation">#{3}</span></span>',before:(e,t)=>{e[2]=Rt.parse(e[2],t)}},"variable-assignment":{pattern:/([A-Za-z_][A-Za-z0-9_]*)(=)/,replacement:"<span class='variable'>#{1}</span><span class='operator'>#{2}</span>"},"variable variable-in-braces":{pattern:/\$\{.+?}(?=\n|\b)/}},{alias:["bash"]});var qt=Object.freeze({__proto__:null,Arduino:H,HTML:K,JSX:Le,Nginx:De,Python:We,Ruby:at,SCSS:Et,Shell:Rt});function Tt(e){let{childNodes:t}=e;if(0===t.length)return null;for(let e=0;e<t.length;e++){let n=t[e];if(n.nodeType===Node.TEXT_NODE)return n;let a=Tt(n);if(a)return a}return null}function It(e){let{fragment:t}=e.detail,n=Tt(t);if(n){let e=n.nodeValue;e&&e.match(/^(\s*\n)/)&&(e=e.replace(/^(\s*\n)/,"")),n.parentNode.replaceChild(document.createTextNode(e),n)}let a=function(e){let{childNodes:t}=e;if(0===t.length)return null;for(let e=t.length-1;e>=0;e--){let n=t[e];if(n.nodeType===Node.TEXT_NODE)return n;let a=Tt(n);if(a)return a}return null}(t);if(a){let e=a.nodeValue;e&&e.match(/(\s*\n)+$/)&&(e=e.replace(/(\s*\n)+$/,"")),a.parentNode.replaceChild(document.createTextNode(e),a)}}function Pt(){return document.addEventListener("daub-will-highlight",It),Lt}function Lt(){document.removeEventListener("daub-will-highlight",It)}function Nt(e){let t=e.target,n=t.parentNode,{fragment:a}=e.detail,r=t.getAttribute("data-lines")||n.getAttribute("data-lines");if(!r)return;let s=(i=r)?i.split(/,\s*/).map((function(e){let t={};if(e.indexOf("-")>-1){let[n,a]=e.split("-").map((e=>Number(e)));t.start=n,t.lines=a+1-n}else t.start=Number(e),t.lines=1;return t})):null;var i;if(!s)return;n.style.position="relative";let p=function(e){let t=getComputedStyle(e);return parseFloat(t.lineHeight)}(t),o=function(e,t){let n=document.createElement("span");n.setAttribute("class","daub-line-highlight-dummy"),n.setAttribute("aria-hidden","true"),n.textContent=" ",e.insertBefore(n,e.firstChild);let a=t.getBoundingClientRect(),r=n.getBoundingClientRect(),s=a.top-r.top;return e.removeChild(n),Math.abs(s)}(t,n);s.forEach((e=>{let t=function(e,t,n){let a=document.createElement("mark");a.setAttribute("class","daub-line-highlight"),a.setAttribute("aria-hidden","true"),a.textContent=new Array(e.lines).join("\n")+" ";let r=n+(e.start-1)*t-2;return Object.assign(a.style,{position:"absolute",top:r+"px",left:"0",right:"0",lineHeight:"inherit"}),a}(e,p,o);a.appendChild(t)}))}function Ct(){return document.addEventListener("daub-will-highlight",Nt),Ft}function Ft(){document.removeEventListener("daub-will-highlight",Nt)}const Dt={WhitespaceNormalizer:Pt,LineHighlighter:Ct},Mt={"whitespace-normalizer":Pt,"line-highlighter":Ct};e.AsyncHighlighter=E,e.Context=y,e.GRAMMARS=qt,e.Grammar=A,e.Highlighter=S,e.Lexer=I,e.PLUGINS=Dt,e.Utils=w,e.init=function({grammars:e=[],plugins:t=[]}={}){let n=new S;return e.map((e=>A.load(e))).forEach((e=>{e&&n.addGrammar(e)})),t.map((e=>Mt[e])).forEach((e=>{e&&e()})),n}}));
